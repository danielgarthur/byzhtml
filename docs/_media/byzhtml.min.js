var byzhtml = (function () {
  'use strict';
  var e = {
    ison: { alternateCodepoint: 'U+1D046', codepoint: 'U+E000' },
    oligon: { alternateCodepoint: 'U+1D047', codepoint: 'U+E001' },
    oligonKentimaMiddle: { codepoint: 'U+E002' },
    oligonKentimaBelow: { codepoint: 'U+E003' },
    oligonKentimaAbove: { codepoint: 'U+E004' },
    oligonYpsiliRight: { codepoint: 'U+E005' },
    oligonYpsiliLeft: { codepoint: 'U+E006' },
    oligonKentimaYpsiliRight: { codepoint: 'U+E007' },
    oligonKentimaYpsiliMiddle: { codepoint: 'U+E008' },
    oligonDoubleYpsili: { codepoint: 'U+E009' },
    oligonKentimataDoubleYpsili: { codepoint: 'U+E00A' },
    oligonKentimaDoubleYpsiliRight: { codepoint: 'U+E00B' },
    oligonKentimaDoubleYpsiliLeft: { codepoint: 'U+E00C' },
    oligonTripleYpsili: { codepoint: 'U+E00D' },
    oligonKentimataTripleYpsili: { codepoint: 'U+E00E' },
    oligonKentimaTripleYpsili: { codepoint: 'U+E00F' },
    oligonIson: { codepoint: 'U+E010' },
    oligonApostrofos: { codepoint: 'U+E011' },
    oligonYporroi: { codepoint: 'U+E012' },
    oligonElafron: { codepoint: 'U+E013' },
    oligonElafronApostrofos: { codepoint: 'U+E014' },
    oligonChamili: { codepoint: 'U+E015' },
    isonApostrofos: { codepoint: 'U+E020' },
    apostrofos: { alternateCodepoint: 'U+1D051', codepoint: 'U+E021' },
    apostrofosSyndesmos: { alternateCodepoint: 'U+1D052', codepoint: 'U+E022' },
    yporroi: { alternateCodepoint: 'U+1D053', codepoint: 'U+E023' },
    elafron: { alternateCodepoint: 'U+1D055', codepoint: 'U+E024' },
    runningElafron: { codepoint: 'U+E025' },
    elafronApostrofos: { codepoint: 'U+E026' },
    chamili: { alternateCodepoint: 'U+1D056', codepoint: 'U+E027' },
    chamiliApostrofos: { codepoint: 'U+E028' },
    chamiliElafron: { codepoint: 'U+E029' },
    chamiliElafronApostrofos: { codepoint: 'U+E02A' },
    doubleChamili: { codepoint: 'U+E02B' },
    doubleChamiliApostrofos: { codepoint: 'U+E02C' },
    doubleChamiliElafron: { codepoint: 'U+E02D' },
    doubleChamiliElafronApostrofos: { codepoint: 'U+E02E' },
    tripleChamili: { codepoint: 'U+E02F' },
    petastiIson: { codepoint: 'U+E040' },
    petasti: { alternateCodepoint: 'U+1D049', codepoint: 'U+E041' },
    petastiOligon: { codepoint: 'U+E042' },
    petastiKentima: { codepoint: 'U+E043' },
    petastiYpsiliRight: { codepoint: 'U+E044' },
    petastiYpsiliLeft: { codepoint: 'U+E045' },
    petastiKentimaYpsiliRight: { codepoint: 'U+E046' },
    petastiKentimaYpsiliMiddle: { codepoint: 'U+E047' },
    petastiDoubleYpsili: { codepoint: 'U+E048' },
    petastiKentimataDoubleYpsili: { codepoint: 'U+E049' },
    petastiKentimaDoubleYpsiliRight: { codepoint: 'U+E04A' },
    petastiKentimaDoubleYpsiliLeft: { codepoint: 'U+E04B' },
    petastiTripleYpsili: { codepoint: 'U+E04C' },
    petastiKentimataTripleYpsili: { codepoint: 'U+E04D' },
    petastiKentimaTripleYpsili: { codepoint: 'U+E04E' },
    petastiApostrofos: { codepoint: 'U+E060' },
    petastiYporroi: { codepoint: 'U+E061' },
    petastiElafron: { codepoint: 'U+E062' },
    petastiRunningElafron: { codepoint: 'U+E063' },
    petastiElafronApostrofos: { codepoint: 'U+E064' },
    petastiChamili: { codepoint: 'U+E065' },
    petastiChamiliApostrofos: { codepoint: 'U+E066' },
    petastiChamiliElafron: { codepoint: 'U+E067' },
    petastiChamiliElafronApostrofos: { codepoint: 'U+E068' },
    petastiDoubleChamili: { codepoint: 'U+E069' },
    petastiDoubleChamiliApostrofos: { codepoint: 'U+E06A' },
    kentima: { alternateCodepoint: 'U+1D04F', codepoint: 'U+E080' },
    kentimata: { alternateCodepoint: 'U+1D04E', codepoint: 'U+E081' },
    oligonKentimataBelow: { codepoint: 'U+E082' },
    oligonKentimataAbove: { codepoint: 'U+E083' },
    oligonIsonKentimata: { codepoint: 'U+E084' },
    oligonKentimaMiddleKentimata: { codepoint: 'U+E085' },
    oligonYpsiliRightKentimata: { codepoint: 'U+E086' },
    oligonYpsiliLeftKentimata: { codepoint: 'U+E087' },
    oligonApostrofosKentimata: { codepoint: 'U+E088' },
    oligonYporroiKentimata: { codepoint: 'U+E089' },
    oligonElafronKentimata: { codepoint: 'U+E08A' },
    oligonRunningElafronKentimata: { codepoint: 'U+E08B' },
    oligonElafronApostrofosKentimata: { codepoint: 'U+E08C' },
    oligonChamiliKentimata: { codepoint: 'U+E08D' },
    vareia: { alternateCodepoint: 'U+1D058', codepoint: 'U+E0A0' },
    psifiston: { alternateCodepoint: 'U+1D05A', codepoint: 'U+E0A1' },
    antikenoma: { alternateCodepoint: 'U+1D05C', codepoint: 'U+E0A2' },
    omalon: { alternateCodepoint: 'U+1D05B', codepoint: 'U+E0A3' },
    omalonConnecting: { codepoint: 'U+E0A4' },
    heteron: { alternateCodepoint: 'U+1D060', codepoint: 'U+E0A5' },
    heteronConnecting: { codepoint: 'U+E0A6' },
    endofonon: { alternateCodepoint: 'U+1D07B', codepoint: 'U+E0A7' },
    yfenAbove: { alternateCodepoint: 'U+1D07D', codepoint: 'U+E0B0' },
    yfenBelow: { alternateCodepoint: 'U+1D07C', codepoint: 'U+E0B1' },
    stavros: { alternateCodepoint: 'U+1D07E', codepoint: 'U+E0C0' },
    breath: { alternateCodepoint: 'U+1D112', codepoint: 'U+E0C1' },
    klasmaAbove: { alternateCodepoint: 'U+1D07F', codepoint: 'U+E0D0' },
    klasmaBelow: { alternateCodepoint: 'U+1D0F4', codepoint: 'U+E0D1' },
    apli: { alternateCodepoint: 'U+1D085', codepoint: 'U+E0D2' },
    dipli: { alternateCodepoint: 'U+1D086', codepoint: 'U+E0D3' },
    tripli: { alternateCodepoint: 'U+1D087', codepoint: 'U+E0D4' },
    tetrapli: { alternateCodepoint: 'U+1D088', codepoint: 'U+E0D5' },
    koronis: { alternateCodepoint: 'U+1D089', codepoint: 'U+E0D6' },
    leimma1: { alternateCodepoint: 'U+1D08A', codepoint: 'U+E0E0' },
    leimma2: { alternateCodepoint: 'U+1D08B', codepoint: 'U+E0E1' },
    leimma3: { alternateCodepoint: 'U+1D08C', codepoint: 'U+E0E2' },
    leimma4: { alternateCodepoint: 'U+1D08D', codepoint: 'U+E0E3' },
    leimmaDot: { codepoint: 'U+E0E4' },
    gorgonAbove: { alternateCodepoint: 'U+1D08F', codepoint: 'U+E0F0' },
    gorgonBelow: { alternateCodepoint: 'U+1D0F5', codepoint: 'U+E0F1' },
    gorgonDottedLeft: { alternateCodepoint: 'U+1D090', codepoint: 'U+E0F2' },
    gorgonDottedRight: { alternateCodepoint: 'U+1D091', codepoint: 'U+E0F3' },
    digorgon: { alternateCodepoint: 'U+1D092', codepoint: 'U+E0F4' },
    digorgonDottedLeftBelow: {
      alternateCodepoint: 'U+1D093',
      codepoint: 'U+E0F5',
    },
    digorgonDottedLeftAbove: {
      alternateCodepoint: 'U+1D094',
      codepoint: 'U+E0F6',
    },
    digorgonDottedRight: { alternateCodepoint: 'U+1D095', codepoint: 'U+E0F7' },
    trigorgon: { alternateCodepoint: 'U+1D096', codepoint: 'U+E0F8' },
    trigorgonDottedLeftBelow: { codepoint: 'U+E0F9' },
    trigorgonDottedLeftAbove: { codepoint: 'U+E0FA' },
    trigorgonDottedRight: { codepoint: 'U+E0FB' },
    argon: { alternateCodepoint: 'U+1D097', codepoint: 'U+E0FC' },
    diargon: { alternateCodepoint: 'U+1D098', codepoint: 'U+E0FD' },
    triargon: { alternateCodepoint: 'U+1D099', codepoint: 'U+E0FE' },
    gorgonSecondary: { codepoint: 'U+E100' },
    gorgonDottedLeftSecondary: { codepoint: 'U+E101' },
    gorgonDottedRightSecondary: { codepoint: 'U+E102' },
    digorgonSecondary: { codepoint: 'U+E103' },
    digorgonDottedLeftBelowSecondary: { codepoint: 'U+E104' },
    digorgonDottedRightSecondary: { codepoint: 'U+E105' },
    trigorgonSecondary: { codepoint: 'U+E106' },
    trigorgonDottedLeftBelowSecondary: { codepoint: 'U+E107' },
    trigorgonDottedRightSecondary: { codepoint: 'U+E108' },
    agogiPoliArgi: { alternateCodepoint: 'U+1D09A', codepoint: 'U+E120' },
    agogiArgoteri: { alternateCodepoint: 'U+1D09B', codepoint: 'U+E121' },
    agogiArgi: { alternateCodepoint: 'U+1D09C', codepoint: 'U+E122' },
    agogiMetria: { alternateCodepoint: 'U+1D09D', codepoint: 'U+E123' },
    agogiMesi: { alternateCodepoint: 'U+1D09E', codepoint: 'U+E124' },
    agogiGorgi: { alternateCodepoint: 'U+1D09F', codepoint: 'U+E125' },
    agogiGorgoteri: { alternateCodepoint: 'U+1D0A0', codepoint: 'U+E126' },
    agogiPoliGorgi: { alternateCodepoint: 'U+1D0A1', codepoint: 'U+E127' },
    agogiPoliArgiAbove: { alternateCodepoint: 'U+1D09A', codepoint: 'U+E128' },
    agogiArgoteriAbove: { alternateCodepoint: 'U+1D09B', codepoint: 'U+E129' },
    agogiArgiAbove: { alternateCodepoint: 'U+1D09C', codepoint: 'U+E12A' },
    agogiMetriaAbove: { alternateCodepoint: 'U+1D09D', codepoint: 'U+E12B' },
    agogiMesiAbove: { alternateCodepoint: 'U+1D09E', codepoint: 'U+E12C' },
    agogiGorgiAbove: { alternateCodepoint: 'U+1D09F', codepoint: 'U+E12D' },
    agogiGorgoteriAbove: { alternateCodepoint: 'U+1D0A0', codepoint: 'U+E12E' },
    agogiPoliGorgiAbove: { alternateCodepoint: 'U+1D0A1', codepoint: 'U+E12F' },
    martyriaNoteZoLow: { codepoint: 'U+E130' },
    martyriaNoteNiLow: { codepoint: 'U+E131' },
    martyriaNotePaLow: { codepoint: 'U+E132' },
    martyriaNoteVouLow: { codepoint: 'U+E133' },
    martyriaNoteGaLow: { codepoint: 'U+E134' },
    martyriaNoteDiLow: { codepoint: 'U+E135' },
    martyriaNoteKeLow: { codepoint: 'U+E136' },
    martyriaNoteZo: { codepoint: 'U+E137' },
    martyriaNoteNi: { codepoint: 'U+E138' },
    martyriaNotePa: { codepoint: 'U+E139' },
    martyriaNoteVou: { codepoint: 'U+E13A' },
    martyriaNoteGa: { codepoint: 'U+E13B' },
    martyriaNoteDi: { codepoint: 'U+E13C' },
    martyriaNoteKe: { codepoint: 'U+E13D' },
    martyriaNoteZoHigh: { codepoint: 'U+E13E' },
    martyriaNoteNiHigh: { codepoint: 'U+E13F' },
    martyriaNotePaHigh: { codepoint: 'U+E140' },
    martyriaNoteVouHigh: { codepoint: 'U+E141' },
    martyriaNoteGaHigh: { codepoint: 'U+E142' },
    martyriaNoteDiHigh: { codepoint: 'U+E143' },
    martyriaNoteKeHigh: { codepoint: 'U+E144' },
    martyriaTick: { codepoint: 'U+E145' },
    martyriaZoBelow: { codepoint: 'U+E150' },
    martyriaDeltaBelow: { codepoint: 'U+E151' },
    martyriaAlphaBelow: { codepoint: 'U+E152' },
    martyriaLegetosBelow: { codepoint: 'U+E153' },
    martyriaNanaBelow: { codepoint: 'U+E154' },
    martyriaDeltaDottedBelow: { codepoint: 'U+E155' },
    martyriaAlphaDottedBelow: { codepoint: 'U+E156' },
    martyriaHardChromaticPaBelow: { codepoint: 'U+E157' },
    martyriaHardChromaticDiBelow: { codepoint: 'U+E158' },
    martyriaSoftChromaticDiBelow: { codepoint: 'U+E159' },
    martyriaSoftChromaticKeBelow: { codepoint: 'U+E15A' },
    martyriaZygosBelow: { codepoint: 'U+E15B' },
    martyriaZoAbove: { codepoint: 'U+E170' },
    martyriaDeltaAbove: { codepoint: 'U+E171' },
    martyriaAlphaAbove: { codepoint: 'U+E172' },
    martyriaLegetosAbove: { codepoint: 'U+E173' },
    martyriaNanaAbove: { codepoint: 'U+E174' },
    martyriaDeltaDottedAbove: { codepoint: 'U+E175' },
    martyriaAlphaDottedAbove: { codepoint: 'U+E176' },
    martyriaHardChromaticPaAbove: { codepoint: 'U+E177' },
    martyriaHardChromaticDiAbove: { codepoint: 'U+E178' },
    martyriaSoftChromaticDiAbove: { codepoint: 'U+E179' },
    martyriaSoftChromaticKeAbove: { codepoint: 'U+E17A' },
    martyriaZygosAbove: { codepoint: 'U+E17B' },
    fthoraDiatonicNiLowAbove: { codepoint: 'U+E190' },
    fthoraDiatonicPaAbove: { codepoint: 'U+E191' },
    fthoraDiatonicVouAbove: { codepoint: 'U+E192' },
    fthoraDiatonicGaAbove: { codepoint: 'U+E193' },
    fthoraDiatonicDiAbove: { codepoint: 'U+E194' },
    fthoraDiatonicKeAbove: { codepoint: 'U+E195' },
    fthoraDiatonicZoAbove: { codepoint: 'U+E196' },
    fthoraDiatonicNiHighAbove: { codepoint: 'U+E197' },
    fthoraHardChromaticPaAbove: { codepoint: 'U+E198' },
    fthoraHardChromaticDiAbove: { codepoint: 'U+E199' },
    fthoraSoftChromaticDiAbove: { codepoint: 'U+E19A' },
    fthoraSoftChromaticKeAbove: { codepoint: 'U+E19B' },
    fthoraEnharmonicAbove: { codepoint: 'U+E19C' },
    chroaZygosAbove: { codepoint: 'U+E19D' },
    chroaKlitonAbove: { codepoint: 'U+E19E' },
    chroaSpathiAbove: { codepoint: 'U+E19F' },
    fthoraDiatonicNiLowBelow: { codepoint: 'U+E1C0' },
    fthoraDiatonicPaBelow: { codepoint: 'U+E1C1' },
    fthoraDiatonicVouBelow: { codepoint: 'U+E1C2' },
    fthoraDiatonicGaBelow: { codepoint: 'U+E1C3' },
    fthoraDiatonicDiBelow: { codepoint: 'U+E1C4' },
    fthoraDiatonicKeBelow: { codepoint: 'U+E1C5' },
    fthoraDiatonicZoBelow: { codepoint: 'U+E1C6' },
    fthoraDiatonicNiHighBelow: { codepoint: 'U+E1C7' },
    fthoraHardChromaticPaBelow: { codepoint: 'U+E1C8' },
    fthoraHardChromaticDiBelow: { codepoint: 'U+E1C9' },
    fthoraSoftChromaticDiBelow: { codepoint: 'U+E1CA' },
    fthoraSoftChromaticKeBelow: { codepoint: 'U+E1CB' },
    fthoraEnharmonicBelow: { codepoint: 'U+E1CC' },
    chroaZygosBelow: { codepoint: 'U+E1CD' },
    chroaKlitonBelow: { codepoint: 'U+E1CE' },
    chroaSpathiBelow: { codepoint: 'U+E1CF' },
    diesis2: { alternateCodepoint: 'U+1D0D0', codepoint: 'U+E1F0' },
    diesis4: { alternateCodepoint: 'U+1D0D1', codepoint: 'U+E1F1' },
    diesis6: { alternateCodepoint: 'U+1D0D2', codepoint: 'U+E1F2' },
    diesis8: { alternateCodepoint: 'U+1D0D3', codepoint: 'U+E1F3' },
    diesisGenikiAbove: { codepoint: 'U+E1F4' },
    diesisGenikiBelow: { codepoint: 'U+E1F5' },
    yfesis2: { alternateCodepoint: 'U+1D0D4', codepoint: 'U+E200' },
    yfesis4: { alternateCodepoint: 'U+1D0D5', codepoint: 'U+E201' },
    yfesis6: { alternateCodepoint: 'U+1D0D6', codepoint: 'U+E202' },
    yfesis8: { alternateCodepoint: 'U+1D0D7', codepoint: 'U+E203' },
    yfesisGenikiAbove: { codepoint: 'U+E204' },
    yfesisGenikiBelow: { codepoint: 'U+E205' },
    barlineSingle: { alternateCodepoint: 'U+1D0DB', codepoint: 'U+E210' },
    barlineDouble: { codepoint: 'U+E211' },
    barlineTheseos: { codepoint: 'U+E212' },
    barlineShortSingle: { alternateCodepoint: 'U+1D0DA', codepoint: 'U+E213' },
    barlineShortDouble: { alternateCodepoint: 'U+1D0DC', codepoint: 'U+E214' },
    barlineShortTheseos: { alternateCodepoint: 'U+1D0DD', codepoint: 'U+E215' },
    measureNumber2: { codepoint: 'U+E220' },
    measureNumber3: { codepoint: 'U+E221' },
    measureNumber4: { codepoint: 'U+E222' },
    measureNumber5: { codepoint: 'U+E223' },
    measureNumber6: { codepoint: 'U+E224' },
    measureNumber7: { codepoint: 'U+E225' },
    measureNumber8: { codepoint: 'U+E226' },
    noteIndicatorNi: { codepoint: 'U+E250' },
    noteIndicatorPa: { codepoint: 'U+E251' },
    noteIndicatorVou: { codepoint: 'U+E252' },
    noteIndicatorGa: { codepoint: 'U+E253' },
    noteIndicatorDi: { codepoint: 'U+E254' },
    noteIndicatorKe: { codepoint: 'U+E255' },
    noteIndicatorZo: { codepoint: 'U+E256' },
    isonIndicatorUnison: { codepoint: 'U+E260' },
    isonIndicatorDiLow: { codepoint: 'U+E261' },
    isonIndicatorKeLow: { codepoint: 'U+E262' },
    isonIndicatorZo: { codepoint: 'U+E263' },
    isonIndicatorNi: { codepoint: 'U+E264' },
    isonIndicatorPa: { codepoint: 'U+E265' },
    isonIndicatorVou: { codepoint: 'U+E266' },
    isonIndicatorGa: { codepoint: 'U+E267' },
    isonIndicatorDi: { codepoint: 'U+E268' },
    isonIndicatorKe: { codepoint: 'U+E269' },
    isonIndicatorZoHigh: { codepoint: 'U+E26A' },
    gorthmikon: { alternateCodepoint: 'U+1D0B5', codepoint: 'U+E280' },
    pelastikon: { alternateCodepoint: 'U+1D0B4', codepoint: 'U+E281' },
    modeFirst: { codepoint: 'U+E2A0' },
    modeSecond: { codepoint: 'U+E2A8' },
    modeThird: { codepoint: 'U+E2B0' },
    modeThirdNana: { alternateCodepoint: 'U+1D0A7', codepoint: 'U+E2B1' },
    modeFourth: { codepoint: 'U+E2B8' },
    modeLegetos: { alternateCodepoint: 'U+1D0AA', codepoint: 'U+E2BA' },
    modePlagalFirst: { codepoint: 'U+E2C0' },
    modePlagalSecond: { codepoint: 'U+E2C8' },
    modeVarys: { alternateCodepoint: 'U+1D0B1', codepoint: 'U+E2D0' },
    modeVarys2: { codepoint: 'U+E2D1' },
    modePlagalFourth: { codepoint: 'U+E2D8' },
    modeNi: { codepoint: 'U+E2E0' },
    modePa: { codepoint: 'U+E2E1' },
    modeVou: { codepoint: 'U+E2E2' },
    modeGa: { codepoint: 'U+E2E3' },
    modeDi: { codepoint: 'U+E2E4' },
    modeKe: { codepoint: 'U+E2E5' },
    modeZo: { codepoint: 'U+E2E6' },
    modeOligonKentimaAbove: { codepoint: 'U+E2E7' },
    modeOligonYpsili: { codepoint: 'U+E2E8' },
    modeElafron: { codepoint: 'U+E2E9' },
    modeRunningElafron: { codepoint: 'U+E2EA' },
    modePlagal: { alternateCodepoint: 'U+1D0AB', codepoint: 'U+E2F0' },
    modeWordEchos: { codepoint: 'U+E2F1' },
    modeWordVarys: { codepoint: 'U+E2F2' },
    modeAlpha: { codepoint: 'U+E2F3' },
    modeBeta: { codepoint: 'U+E2F4' },
    modeGamma: { codepoint: 'U+E2F5' },
    modeDelta: { codepoint: 'U+E2F6' },
    modeAlphaCapital: { codepoint: 'U+E2F7' },
    modeBetaCapital: { codepoint: 'U+E2F8' },
    modeGammaCapital: { codepoint: 'U+E2F9' },
    modeDeltaCapital: { codepoint: 'U+E2FA' },
  };
  var t = {
    neumeMappingService: new (class {
      constructor() {
        (this.glyphNameToCodepointMap = new Map()), this.initMap();
      }
      getMapping(e) {
        return this.glyphNameToCodepointMap.get(e);
      }
      initMap() {
        for (let t in e) {
          const o = Number('0x' + e[t].codepoint.substring(2));
          this.glyphNameToCodepointMap.set(t, String.fromCodePoint(o));
        }
      }
    })(),
    fontService: new (class {
      constructor() {
        this.fontFamilyMetadataMap = new Map();
      }
      loadMap(e, t) {
        this.fontFamilyMetadataMap.set(e, t);
      }
      getMetadata(e) {
        return this.fontFamilyMetadataMap.get(e);
      }
      getMarkOffset(e, t, o) {
        const s = this.getMetadata(e);
        if (!s)
          return void console.error(
            `FontService.getMarkOffset: no metadata loaded for font family "${e}"`,
          );
        const i = Object.keys(s.glyphsWithAnchors[o]).find(
          (e) => null != s.glyphsWithAnchors[t][e],
        );
        if (null == i)
          return (
            console.warn(`Missing anchor for base: ${t} mark: ${o}`),
            { x: 0, y: 0 }
          );
        const n = s.glyphsWithAnchors[o][i],
          a = s.glyphsWithAnchors[t][i];
        return { x: a[0] - n[0], y: -(a[1] - n[1]) };
      }
    })(),
    customElementGlyphMappingService: new (class {
      constructor() {
        (this.map = new Map()),
          this.map.set('X-ISON', 'ison'),
          this.map.set('X-OLIGON', 'oligon'),
          this.map.set('X-OLIGON-KENTIMA-MIDDLE', 'oligonKentimaMiddle'),
          this.map.set('X-OLIGON-KENTIMA-BELOW', 'oligonKentimaBelow'),
          this.map.set('X-OLIGON-KENTIMA-ABOVE', 'oligonKentimaAbove'),
          this.map.set('X-OLIGON-YPSILI-RIGHT', 'oligonYpsiliRight'),
          this.map.set('X-OLIGON-YPSILI-LEFT', 'oligonYpsiliLeft'),
          this.map.set(
            'X-OLIGON-KENTIMA-YPSILI-RIGHT',
            'oligonKentimaYpsiliRight',
          ),
          this.map.set(
            'X-OLIGON-KENTIMA-YPSILI-MIDDLE',
            'oligonKentimaYpsiliMiddle',
          ),
          this.map.set('X-OLIGON-DOUBLE-YPSILI', 'oligonDoubleYpsili'),
          this.map.set(
            'X-OLIGON-KENTIMATA-DOUBLE-YPSILI',
            'oligonKentimataDoubleYpsili',
          ),
          this.map.set(
            'X-OLIGON-KENTIMA-DOUBLE-YPSILI-RIGHT',
            'oligonKentimaDoubleYpsiliRight',
          ),
          this.map.set(
            'X-OLIGON-KENTIMA-DOUBLE-YPSILI-LEFT',
            'oligonKentimaDoubleYpsiliLeft',
          ),
          this.map.set('X-OLIGON-TRIPLE-YPSILI', 'oligonTripleYpsili'),
          this.map.set(
            'X-OLIGON-KENTIMATA-TRIPLE-YPSILI',
            'oligonKentimataTripleYpsili',
          ),
          this.map.set(
            'X-OLIGON-KENTIMA-TRIPLE-YPSILI',
            'oligonKentimaTripleYpsili',
          ),
          this.map.set('X-OLIGON-ISON', 'oligonIson'),
          this.map.set('X-OLIGON-APOSTROFOS', 'oligonApostrofos'),
          this.map.set('X-OLIGON-YPORROI', 'oligonYporroi'),
          this.map.set('X-OLIGON-ELAFRON', 'oligonElafron'),
          this.map.set(
            'X-OLIGON-ELAFRON-APOSTROFOS',
            'oligonElafronApostrofos',
          ),
          this.map.set('X-OLIGON-CHAMILI', 'oligonChamili'),
          this.map.set('X-ISON-APOSTROFOS', 'isonApostrofos'),
          this.map.set('X-APOSTROFOS', 'apostrofos'),
          this.map.set('X-APOSTROFOS-SYNDESMOS', 'apostrofosSyndesmos'),
          this.map.set('X-YPORROI', 'yporroi'),
          this.map.set('X-ELAFRON', 'elafron'),
          this.map.set('X-RUNNING-ELAFRON', 'runningElafron'),
          this.map.set('X-ELAFRON-APOSTROFOS', 'elafronApostrofos'),
          this.map.set('X-CHAMILI', 'chamili'),
          this.map.set('X-CHAMILI-APOSTROFOS', 'chamiliApostrofos'),
          this.map.set('X-CHAMILI-ELAFRON', 'chamiliElafron'),
          this.map.set(
            'X-CHAMILI-ELAFRON-APOSTROFOS',
            'chamiliElafronApostrofos',
          ),
          this.map.set('X-DOUBLE-CHAMILI', 'doubleChamili'),
          this.map.set(
            'X-DOUBLE-CHAMILI-APOSTROFOS',
            'doubleChamiliApostrofos',
          ),
          this.map.set('X-DOUBLE-CHAMILI-ELAFRON', 'doubleChamiliElafron'),
          this.map.set(
            'X-DOUBLE-CHAMILI-ELAFRON-APOSTROFOS',
            'doubleChamiliElafronApostrofos',
          ),
          this.map.set('X-TRIPLE-CHAMILI', 'tripleChamili'),
          this.map.set('X-PETASTI-ISON', 'petastiIson'),
          this.map.set('X-PETASTI', 'petasti'),
          this.map.set('X-PETASTI-OLIGON', 'petastiOligon'),
          this.map.set('X-PETASTI-KENTIMA', 'petastiKentima'),
          this.map.set('X-PETASTI-YPSILI-RIGHT', 'petastiYpsiliRight'),
          this.map.set('X-PETASTI-YPSILI-LEFT', 'petastiYpsiliLeft'),
          this.map.set(
            'X-PETASTI-KENTIMA-YPSILI-RIGHT',
            'petastiKentimaYpsiliRight',
          ),
          this.map.set(
            'X-PETASTI-KENTIMA-YPSILI-MIDDLE',
            'petastiKentimaYpsiliMiddle',
          ),
          this.map.set('X-PETASTI-DOUBLE-YPSILI', 'petastiDoubleYpsili'),
          this.map.set(
            'X-PETASTI-KENTIMATA-DOUBLE-YPSILI',
            'petastiKentimataDoubleYpsili',
          ),
          this.map.set(
            'X-PETASTI-KENTIMA-DOUBLE-YPSILI-RIGHT',
            'petastiKentimaDoubleYpsiliRight',
          ),
          this.map.set(
            'X-PETASTI-KENTIMA-DOUBLE-YPSILI-LEFT',
            'petastiKentimaDoubleYpsiliLeft',
          ),
          this.map.set('X-PETASTI-TRIPLE-YPSILI', 'petastiTripleYpsili'),
          this.map.set(
            'X-PETASTI-KENTIMATA-TRIPLE-YPSILI',
            'petastiKentimataTripleYpsili',
          ),
          this.map.set(
            'X-PETASTI-KENTIMA-TRIPLE-YPSILI',
            'petastiKentimaTripleYpsili',
          ),
          this.map.set('X-PETASTI-APOSTROFOS', 'petastiApostrofos'),
          this.map.set('X-PETASTI-YPORROI', 'petastiYporroi'),
          this.map.set('X-PETASTI-ELAFRON', 'petastiElafron'),
          this.map.set('X-PETASTI-RUNNING-ELAFRON', 'petastiRunningElafron'),
          this.map.set(
            'X-PETASTI-ELAFRON-APOSTROFOS',
            'petastiElafronApostrofos',
          ),
          this.map.set('X-PETASTI-CHAMILI', 'petastiChamili'),
          this.map.set(
            'X-PETASTI-CHAMILI-APOSTROFOS',
            'petastiChamiliApostrofos',
          ),
          this.map.set('X-PETASTI-CHAMILI-ELAFRON', 'petastiChamiliElafron'),
          this.map.set(
            'X-PETASTI-CHAMILI-ELAFRON-APOSTROFOS',
            'petastiChamiliElafronApostrofos',
          ),
          this.map.set('X-PETASTI-DOUBLE-CHAMILI', 'petastiDoubleChamili'),
          this.map.set(
            'X-PETASTI-DOUBLE-CHAMILI-APOSTROFOS',
            'petastiDoubleChamiliApostrofos',
          ),
          this.map.set('X-KENTIMA', 'kentima'),
          this.map.set('X-KENTIMATA', 'kentimata'),
          this.map.set('X-OLIGON-KENTIMATA-BELOW', 'oligonKentimataBelow'),
          this.map.set('X-OLIGON-KENTIMATA-ABOVE', 'oligonKentimataAbove'),
          this.map.set('X-OLIGON-ISON-KENTIMATA', 'oligonIsonKentimata'),
          this.map.set(
            'X-OLIGON-KENTIMA-MIDDLE-KENTIMATA',
            'oligonKentimaMiddleKentimata',
          ),
          this.map.set(
            'X-OLIGON-YPSILI-RIGHT-KENTIMATA',
            'oligonYpsiliRightKentimata',
          ),
          this.map.set(
            'X-OLIGON-YPSILI-LEFT-KENTIMATA',
            'oligonYpsiliLeftKentimata',
          ),
          this.map.set(
            'X-OLIGON-APOSTROFOS-KENTIMATA',
            'oligonApostrofosKentimata',
          ),
          this.map.set('X-OLIGON-YPORROI-KENTIMATA', 'oligonYporroiKentimata'),
          this.map.set('X-OLIGON-ELAFRON-KENTIMATA', 'oligonElafronKentimata'),
          this.map.set(
            'X-OLIGON-RUNNING-ELAFRON-KENTIMATA',
            'oligonRunningElafronKentimata',
          ),
          this.map.set(
            'X-OLIGON-ELAFRON-APOSTROFOS-KENTIMATA',
            'oligonElafronApostrofosKentimata',
          ),
          this.map.set('X-OLIGON-CHAMILI-KENTIMATA', 'oligonChamiliKentimata'),
          this.map.set('X-VAREIA', 'vareia'),
          this.map.set('X-PSIFISTON', 'psifiston'),
          this.map.set('X-ANTIKENOMA', 'antikenoma'),
          this.map.set('X-OMALON', 'omalon'),
          this.map.set('X-OMALON-CONNECTING', 'omalonConnecting'),
          this.map.set('X-HETERON', 'heteron'),
          this.map.set('X-HETERON-CONNECTING', 'heteronConnecting'),
          this.map.set('X-ENDOFONON', 'endofonon'),
          this.map.set('X-YFEN-ABOVE', 'yfenAbove'),
          this.map.set('X-YFEN-BELOW', 'yfenBelow'),
          this.map.set('X-STAVROS', 'stavros'),
          this.map.set('X-BREATH', 'breath'),
          this.map.set('X-KLASMA-ABOVE', 'klasmaAbove'),
          this.map.set('X-KLASMA-BELOW', 'klasmaBelow'),
          this.map.set('X-APLI', 'apli'),
          this.map.set('X-DIPLI', 'dipli'),
          this.map.set('X-TRIPLI', 'tripli'),
          this.map.set('X-TETRAPLI', 'tetrapli'),
          this.map.set('X-KORONIS', 'koronis'),
          this.map.set('X-LEIMMA1', 'leimma1'),
          this.map.set('X-LEIMMA2', 'leimma2'),
          this.map.set('X-LEIMMA3', 'leimma3'),
          this.map.set('X-LEIMMA4', 'leimma4'),
          this.map.set('X-LEIMMA-DOT', 'leimmaDot'),
          this.map.set('X-GORGON-ABOVE', 'gorgonAbove'),
          this.map.set('X-GORGON-BELOW', 'gorgonBelow'),
          this.map.set('X-GORGON-DOTTED-LEFT', 'gorgonDottedLeft'),
          this.map.set('X-GORGON-DOTTED-RIGHT', 'gorgonDottedRight'),
          this.map.set('X-DIGORGON', 'digorgon'),
          this.map.set(
            'X-DIGORGON-DOTTED-LEFT-BELOW',
            'digorgonDottedLeftBelow',
          ),
          this.map.set(
            'X-DIGORGON-DOTTED-LEFT-ABOVE',
            'digorgonDottedLeftAbove',
          ),
          this.map.set('X-DIGORGON-DOTTED-RIGHT', 'digorgonDottedRight'),
          this.map.set('X-TRIGORGON', 'trigorgon'),
          this.map.set(
            'X-TRIGORGON-DOTTED-LEFT-BELOW',
            'trigorgonDottedLeftBelow',
          ),
          this.map.set(
            'X-TRIGORGON-DOTTED-LEFT-ABOVE',
            'trigorgonDottedLeftAbove',
          ),
          this.map.set('X-TRIGORGON-DOTTED-RIGHT', 'trigorgonDottedRight'),
          this.map.set('X-ARGON', 'argon'),
          this.map.set('X-DIARGON', 'diargon'),
          this.map.set('X-TRIARGON', 'triargon'),
          this.map.set('X-GORGON-SECONDARY', 'gorgonSecondary'),
          this.map.set(
            'X-GORGON-DOTTED-LEFT-SECONDARY',
            'gorgonDottedLeftSecondary',
          ),
          this.map.set(
            'X-GORGON-DOTTED-RIGHT-SECONDARY',
            'gorgonDottedRightSecondary',
          ),
          this.map.set('X-DIGORGON-SECONDARY', 'digorgonSecondary'),
          this.map.set(
            'X-DIGORGON-DOTTED-LEFT-BELOW-SECONDARY',
            'digorgonDottedLeftBelowSecondary',
          ),
          this.map.set(
            'X-DIGORGON-DOTTED-RIGHT-SECONDARY',
            'digorgonDottedRightSecondary',
          ),
          this.map.set('X-TRIGORGON-SECONDARY', 'trigorgonSecondary'),
          this.map.set(
            'X-TRIGORGON-DOTTED-LEFT-BELOW-SECONDARY',
            'trigorgonDottedLeftBelowSecondary',
          ),
          this.map.set(
            'X-TRIGORGON-DOTTED-RIGHT-SECONDARY',
            'trigorgonDottedRightSecondary',
          ),
          this.map.set('X-AGOGI-POLI-ARGI', 'agogiPoliArgi'),
          this.map.set('X-AGOGI-ARGOTERI', 'agogiArgoteri'),
          this.map.set('X-AGOGI-ARGI', 'agogiArgi'),
          this.map.set('X-AGOGI-METRIA', 'agogiMetria'),
          this.map.set('X-AGOGI-MESI', 'agogiMesi'),
          this.map.set('X-AGOGI-GORGI', 'agogiGorgi'),
          this.map.set('X-AGOGI-GORGOTERI', 'agogiGorgoteri'),
          this.map.set('X-AGOGI-POLI-GORGI', 'agogiPoliGorgi'),
          this.map.set('X-AGOGI-POLI-ARGI-ABOVE', 'agogiPoliArgiAbove'),
          this.map.set('X-AGOGI-ARGOTERI-ABOVE', 'agogiArgoteriAbove'),
          this.map.set('X-AGOGI-ARGI-ABOVE', 'agogiArgiAbove'),
          this.map.set('X-AGOGI-METRIA-ABOVE', 'agogiMetriaAbove'),
          this.map.set('X-AGOGI-MESI-ABOVE', 'agogiMesiAbove'),
          this.map.set('X-AGOGI-GORGI-ABOVE', 'agogiGorgiAbove'),
          this.map.set('X-AGOGI-GORGOTERI-ABOVE', 'agogiGorgoteriAbove'),
          this.map.set('X-AGOGI-POLI-GORGI-ABOVE', 'agogiPoliGorgiAbove'),
          this.map.set('X-MARTYRIA-NOTE-ZO-LOW', 'martyriaNoteZoLow'),
          this.map.set('X-MARTYRIA-NOTE-NI-LOW', 'martyriaNoteNiLow'),
          this.map.set('X-MARTYRIA-NOTE-PA-LOW', 'martyriaNotePaLow'),
          this.map.set('X-MARTYRIA-NOTE-VOU-LOW', 'martyriaNoteVouLow'),
          this.map.set('X-MARTYRIA-NOTE-GA-LOW', 'martyriaNoteGaLow'),
          this.map.set('X-MARTYRIA-NOTE-DI-LOW', 'martyriaNoteDiLow'),
          this.map.set('X-MARTYRIA-NOTE-KE-LOW', 'martyriaNoteKeLow'),
          this.map.set('X-MARTYRIA-NOTE-ZO', 'martyriaNoteZo'),
          this.map.set('X-MARTYRIA-NOTE-NI', 'martyriaNoteNi'),
          this.map.set('X-MARTYRIA-NOTE-PA', 'martyriaNotePa'),
          this.map.set('X-MARTYRIA-NOTE-VOU', 'martyriaNoteVou'),
          this.map.set('X-MARTYRIA-NOTE-GA', 'martyriaNoteGa'),
          this.map.set('X-MARTYRIA-NOTE-DI', 'martyriaNoteDi'),
          this.map.set('X-MARTYRIA-NOTE-KE', 'martyriaNoteKe'),
          this.map.set('X-MARTYRIA-NOTE-ZO-HIGH', 'martyriaNoteZoHigh'),
          this.map.set('X-MARTYRIA-NOTE-NI-HIGH', 'martyriaNoteNiHigh'),
          this.map.set('X-MARTYRIA-NOTE-PA-HIGH', 'martyriaNotePaHigh'),
          this.map.set('X-MARTYRIA-NOTE-VOU-HIGH', 'martyriaNoteVouHigh'),
          this.map.set('X-MARTYRIA-NOTE-GA-HIGH', 'martyriaNoteGaHigh'),
          this.map.set('X-MARTYRIA-NOTE-DI-HIGH', 'martyriaNoteDiHigh'),
          this.map.set('X-MARTYRIA-NOTE-KE-HIGH', 'martyriaNoteKeHigh'),
          this.map.set('X-MARTYRIA-TICK', 'martyriaTick'),
          this.map.set('X-MARTYRIA-ZO-BELOW', 'martyriaZoBelow'),
          this.map.set('X-MARTYRIA-DELTA-BELOW', 'martyriaDeltaBelow'),
          this.map.set('X-MARTYRIA-ALPHA-BELOW', 'martyriaAlphaBelow'),
          this.map.set('X-MARTYRIA-LEGETOS-BELOW', 'martyriaLegetosBelow'),
          this.map.set('X-MARTYRIA-NANA-BELOW', 'martyriaNanaBelow'),
          this.map.set(
            'X-MARTYRIA-DELTA-DOTTED-BELOW',
            'martyriaDeltaDottedBelow',
          ),
          this.map.set(
            'X-MARTYRIA-ALPHA-DOTTED-BELOW',
            'martyriaAlphaDottedBelow',
          ),
          this.map.set(
            'X-MARTYRIA-HARD-CHROMATIC-PA-BELOW',
            'martyriaHardChromaticPaBelow',
          ),
          this.map.set(
            'X-MARTYRIA-HARD-CHROMATIC-DI-BELOW',
            'martyriaHardChromaticDiBelow',
          ),
          this.map.set(
            'X-MARTYRIA-SOFT-CHROMATIC-DI-BELOW',
            'martyriaSoftChromaticDiBelow',
          ),
          this.map.set(
            'X-MARTYRIA-SOFT-CHROMATIC-KE-BELOW',
            'martyriaSoftChromaticKeBelow',
          ),
          this.map.set('X-MARTYRIA-ZYGOS-BELOW', 'martyriaZygosBelow'),
          this.map.set('X-MARTYRIA-ZO-ABOVE', 'martyriaZoAbove'),
          this.map.set('X-MARTYRIA-DELTA-ABOVE', 'martyriaDeltaAbove'),
          this.map.set('X-MARTYRIA-ALPHA-ABOVE', 'martyriaAlphaAbove'),
          this.map.set('X-MARTYRIA-LEGETOS-ABOVE', 'martyriaLegetosAbove'),
          this.map.set('X-MARTYRIA-NANA-ABOVE', 'martyriaNanaAbove'),
          this.map.set(
            'X-MARTYRIA-DELTA-DOTTED-ABOVE',
            'martyriaDeltaDottedAbove',
          ),
          this.map.set(
            'X-MARTYRIA-ALPHA-DOTTED-ABOVE',
            'martyriaAlphaDottedAbove',
          ),
          this.map.set(
            'X-MARTYRIA-HARD-CHROMATIC-PA-ABOVE',
            'martyriaHardChromaticPaAbove',
          ),
          this.map.set(
            'X-MARTYRIA-HARD-CHROMATIC-DI-ABOVE',
            'martyriaHardChromaticDiAbove',
          ),
          this.map.set(
            'X-MARTYRIA-SOFT-CHROMATIC-DI-ABOVE',
            'martyriaSoftChromaticDiAbove',
          ),
          this.map.set(
            'X-MARTYRIA-SOFT-CHROMATIC-KE-ABOVE',
            'martyriaSoftChromaticKeAbove',
          ),
          this.map.set('X-MARTYRIA-ZYGOS-ABOVE', 'martyriaZygosAbove'),
          this.map.set(
            'X-FTHORA-DIATONIC-NI-LOW-ABOVE',
            'fthoraDiatonicNiLowAbove',
          ),
          this.map.set('X-FTHORA-DIATONIC-PA-ABOVE', 'fthoraDiatonicPaAbove'),
          this.map.set('X-FTHORA-DIATONIC-VOU-ABOVE', 'fthoraDiatonicVouAbove'),
          this.map.set('X-FTHORA-DIATONIC-GA-ABOVE', 'fthoraDiatonicGaAbove'),
          this.map.set('X-FTHORA-DIATONIC-DI-ABOVE', 'fthoraDiatonicDiAbove'),
          this.map.set('X-FTHORA-DIATONIC-KE-ABOVE', 'fthoraDiatonicKeAbove'),
          this.map.set('X-FTHORA-DIATONIC-ZO-ABOVE', 'fthoraDiatonicZoAbove'),
          this.map.set(
            'X-FTHORA-DIATONIC-NI-HIGH-ABOVE',
            'fthoraDiatonicNiHighAbove',
          ),
          this.map.set(
            'X-FTHORA-HARD-CHROMATIC-PA-ABOVE',
            'fthoraHardChromaticPaAbove',
          ),
          this.map.set(
            'X-FTHORA-HARD-CHROMATIC-DI-ABOVE',
            'fthoraHardChromaticDiAbove',
          ),
          this.map.set(
            'X-FTHORA-SOFT-CHROMATIC-DI-ABOVE',
            'fthoraSoftChromaticDiAbove',
          ),
          this.map.set(
            'X-FTHORA-SOFT-CHROMATIC-KE-ABOVE',
            'fthoraSoftChromaticKeAbove',
          ),
          this.map.set('X-FTHORA-ENHARMONIC-ABOVE', 'fthoraEnharmonicAbove'),
          this.map.set('X-CHROA-ZYGOS-ABOVE', 'chroaZygosAbove'),
          this.map.set('X-CHROA-KLITON-ABOVE', 'chroaKlitonAbove'),
          this.map.set('X-CHROA-SPATHI-ABOVE', 'chroaSpathiAbove'),
          this.map.set(
            'X-FTHORA-DIATONIC-NI-LOW-BELOW',
            'fthoraDiatonicNiLowBelow',
          ),
          this.map.set('X-FTHORA-DIATONIC-PA-BELOW', 'fthoraDiatonicPaBelow'),
          this.map.set('X-FTHORA-DIATONIC-VOU-BELOW', 'fthoraDiatonicVouBelow'),
          this.map.set('X-FTHORA-DIATONIC-GA-BELOW', 'fthoraDiatonicGaBelow'),
          this.map.set('X-FTHORA-DIATONIC-DI-BELOW', 'fthoraDiatonicDiBelow'),
          this.map.set('X-FTHORA-DIATONIC-KE-BELOW', 'fthoraDiatonicKeBelow'),
          this.map.set('X-FTHORA-DIATONIC-ZO-BELOW', 'fthoraDiatonicZoBelow'),
          this.map.set(
            'X-FTHORA-DIATONIC-NI-HIGH-BELOW',
            'fthoraDiatonicNiHighBelow',
          ),
          this.map.set(
            'X-FTHORA-HARD-CHROMATIC-PA-BELOW',
            'fthoraHardChromaticPaBelow',
          ),
          this.map.set(
            'X-FTHORA-HARD-CHROMATIC-DI-BELOW',
            'fthoraHardChromaticDiBelow',
          ),
          this.map.set(
            'X-FTHORA-SOFT-CHROMATIC-DI-BELOW',
            'fthoraSoftChromaticDiBelow',
          ),
          this.map.set(
            'X-FTHORA-SOFT-CHROMATIC-KE-BELOW',
            'fthoraSoftChromaticKeBelow',
          ),
          this.map.set('X-FTHORA-ENHARMONIC-BELOW', 'fthoraEnharmonicBelow'),
          this.map.set('X-CHROA-ZYGOS-BELOW', 'chroaZygosBelow'),
          this.map.set('X-CHROA-KLITON-BELOW', 'chroaKlitonBelow'),
          this.map.set('X-CHROA-SPATHI-BELOW', 'chroaSpathiBelow'),
          this.map.set('X-DIESIS2', 'diesis2'),
          this.map.set('X-DIESIS4', 'diesis4'),
          this.map.set('X-DIESIS6', 'diesis6'),
          this.map.set('X-DIESIS8', 'diesis8'),
          this.map.set('X-DIESIS-GENIKI-ABOVE', 'diesisGenikiAbove'),
          this.map.set('X-DIESIS-GENIKI-BELOW', 'diesisGenikiBelow'),
          this.map.set('X-YFESIS2', 'yfesis2'),
          this.map.set('X-YFESIS4', 'yfesis4'),
          this.map.set('X-YFESIS6', 'yfesis6'),
          this.map.set('X-YFESIS8', 'yfesis8'),
          this.map.set('X-YFESIS-GENIKI-ABOVE', 'yfesisGenikiAbove'),
          this.map.set('X-YFESIS-GENIKI-BELOW', 'yfesisGenikiBelow'),
          this.map.set('X-BARLINE-SINGLE', 'barlineSingle'),
          this.map.set('X-BARLINE-DOUBLE', 'barlineDouble'),
          this.map.set('X-BARLINE-THESEOS', 'barlineTheseos'),
          this.map.set('X-BARLINE-SHORT-SINGLE', 'barlineShortSingle'),
          this.map.set('X-BARLINE-SHORT-DOUBLE', 'barlineShortDouble'),
          this.map.set('X-BARLINE-SHORT-THESEOS', 'barlineShortTheseos'),
          this.map.set('X-MEASURE-NUMBER2', 'measureNumber2'),
          this.map.set('X-MEASURE-NUMBER3', 'measureNumber3'),
          this.map.set('X-MEASURE-NUMBER4', 'measureNumber4'),
          this.map.set('X-MEASURE-NUMBER5', 'measureNumber5'),
          this.map.set('X-MEASURE-NUMBER6', 'measureNumber6'),
          this.map.set('X-MEASURE-NUMBER7', 'measureNumber7'),
          this.map.set('X-MEASURE-NUMBER8', 'measureNumber8'),
          this.map.set('X-NOTE-INDICATOR-NI', 'noteIndicatorNi'),
          this.map.set('X-NOTE-INDICATOR-PA', 'noteIndicatorPa'),
          this.map.set('X-NOTE-INDICATOR-VOU', 'noteIndicatorVou'),
          this.map.set('X-NOTE-INDICATOR-GA', 'noteIndicatorGa'),
          this.map.set('X-NOTE-INDICATOR-DI', 'noteIndicatorDi'),
          this.map.set('X-NOTE-INDICATOR-KE', 'noteIndicatorKe'),
          this.map.set('X-NOTE-INDICATOR-ZO', 'noteIndicatorZo'),
          this.map.set('X-ISON-INDICATOR-UNISON', 'isonIndicatorUnison'),
          this.map.set('X-ISON-INDICATOR-DI-LOW', 'isonIndicatorDiLow'),
          this.map.set('X-ISON-INDICATOR-KE-LOW', 'isonIndicatorKeLow'),
          this.map.set('X-ISON-INDICATOR-ZO', 'isonIndicatorZo'),
          this.map.set('X-ISON-INDICATOR-NI', 'isonIndicatorNi'),
          this.map.set('X-ISON-INDICATOR-PA', 'isonIndicatorPa'),
          this.map.set('X-ISON-INDICATOR-VOU', 'isonIndicatorVou'),
          this.map.set('X-ISON-INDICATOR-GA', 'isonIndicatorGa'),
          this.map.set('X-ISON-INDICATOR-DI', 'isonIndicatorDi'),
          this.map.set('X-ISON-INDICATOR-KE', 'isonIndicatorKe'),
          this.map.set('X-ISON-INDICATOR-ZO-HIGH', 'isonIndicatorZoHigh'),
          this.map.set('X-GORTHMIKON', 'gorthmikon'),
          this.map.set('X-PELASTIKON', 'pelastikon'),
          this.map.set('X-MODE-FIRST', 'modeFirst'),
          this.map.set('X-MODE-SECOND', 'modeSecond'),
          this.map.set('X-MODE-THIRD', 'modeThird'),
          this.map.set('X-MODE-THIRD-NANA', 'modeThirdNana'),
          this.map.set('X-MODE-FOURTH', 'modeFourth'),
          this.map.set('X-MODE-LEGETOS', 'modeLegetos'),
          this.map.set('X-MODE-PLAGAL-FIRST', 'modePlagalFirst'),
          this.map.set('X-MODE-PLAGAL-SECOND', 'modePlagalSecond'),
          this.map.set('X-MODE-VARYS', 'modeVarys'),
          this.map.set('X-MODE-VARYS2', 'modeVarys2'),
          this.map.set('X-MODE-PLAGAL-FOURTH', 'modePlagalFourth'),
          this.map.set('X-MODE-NI', 'modeNi'),
          this.map.set('X-MODE-PA', 'modePa'),
          this.map.set('X-MODE-VOU', 'modeVou'),
          this.map.set('X-MODE-GA', 'modeGa'),
          this.map.set('X-MODE-DI', 'modeDi'),
          this.map.set('X-MODE-KE', 'modeKe'),
          this.map.set('X-MODE-ZO', 'modeZo'),
          this.map.set('X-MODE-OLIGON-KENTIMA-ABOVE', 'modeOligonKentimaAbove'),
          this.map.set('X-MODE-OLIGON-YPSILI', 'modeOligonYpsili'),
          this.map.set('X-MODE-ELAFRON', 'modeElafron'),
          this.map.set('X-MODE-RUNNING-ELAFRON', 'modeRunningElafron'),
          this.map.set('X-MODE-PLAGAL', 'modePlagal'),
          this.map.set('X-MODE-WORD-ECHOS', 'modeWordEchos'),
          this.map.set('X-MODE-WORD-VARYS', 'modeWordVarys'),
          this.map.set('X-MODE-ALPHA', 'modeAlpha'),
          this.map.set('X-MODE-BETA', 'modeBeta'),
          this.map.set('X-MODE-GAMMA', 'modeGamma'),
          this.map.set('X-MODE-DELTA', 'modeDelta'),
          this.map.set('X-MODE-ALPHA-CAPITAL', 'modeAlphaCapital'),
          this.map.set('X-MODE-BETA-CAPITAL', 'modeBetaCapital'),
          this.map.set('X-MODE-GAMMA-CAPITAL', 'modeGammaCapital'),
          this.map.set('X-MODE-DELTA-CAPITAL', 'modeDeltaCapital');
      }
      getGlyphNameFromNodeName(e) {
        return this.map.get(e);
      }
    })(),
    options: { defaultFontFamily: 'Neanes', useLegacyPositioning: !1 },
  };
  class o extends HTMLElement {
    constructor(e) {
      super(),
        this.attachShadow({ mode: 'open' }),
        (this.shadowRoot.innerHTML =
          '\n      <style>\n        :host {\n          position: relative;\n          display: inline-block;\n        }\n      </style>\n      <span>\n          <slot></slot>\n      </span>\n    ');
    }
  }
  class s extends HTMLElement {
    static get observedAttributes() {
      return ['name', 'font-family'];
    }
    constructor() {
      super(), this.attachShadow({ mode: 'open' });
    }
    connectedCallback() {
      this.updateStyle();
    }
    attributeChangedCallback() {
      this.updateStyle();
    }
    updateStyle() {
      if (!this.hasAttribute('name'))
        return void console.error('Neume: Missing attribute "name"');
      const e = t.neumeMappingService.getMapping(this.getAttribute('name'));
      let o = '',
        s = t.options.defaultFontFamily;
      this.hasAttribute('font-family') &&
        (s = this.getAttribute('font-family')),
        this.hasAttribute('salt') &&
          (o = `font-feature-settings: 'salt' ${this.getAttribute('salt')};`),
        (this.shadowRoot.innerHTML = `<span style="font-family: ${s}; ${o}">${e}</span>`);
    }
  }
  class i extends HTMLElement {
    constructor(e) {
      super(),
        this.attachShadow({ mode: 'open' }),
        (this.shadowRoot.innerHTML =
          '\n      <style>\n        :host {\n          position: relative;\n          display: inline-block;\n        }\n\n        .group {\n          position: relative;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: center;\n        }\n      </style>\n      <span class="group">\n          <div><slot></slot></div>\n          <div class="lyrics-container"><slot name="lyric"></slot><slot name="melisma"></slot></div>\n      </span>\n    ');
    }
  }
  class n extends HTMLElement {
    static get observedAttributes() {
      return ['width'];
    }
    constructor() {
      super(), this.attachShadow({ mode: 'open' });
    }
    connectedCallback() {
      this.updateStyle();
    }
    attributeChangedCallback() {
      this.updateStyle();
    }
    updateStyle() {
      this.hasAttribute('width') ||
        console.error('Neume: Missing attribute "width"'),
        (this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: inline-block;\n          width: ${this.getAttribute(
          'width',
        )};\n        }\n      </style>`);
    }
  }
  class a extends HTMLElement {
    static get observedAttributes() {
      return ['font-family', 'font-size'];
    }
    constructor() {
      super(), this.attachShadow({ mode: 'open' });
    }
    connectedCallback() {
      this.updateStyle();
    }
    attributeChangedCallback() {
      this.updateStyle();
    }
    updateStyle() {
      getComputedStyle(this);
      let e = t.options.defaultFontFamily,
        o = '';
      this.hasAttribute('font-family') &&
        (e = this.getAttribute('font-family')),
        this.hasAttribute('font-size') &&
          (o = `font-size: ${this.getAttribute('font-size')};`),
        (this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: inline-block;\n          font-family: ${e};\n          ${o}\n        }\n      </style>`);
    }
  }
  class r extends HTMLElement {
    static get observedAttributes() {
      return ['font-family', 'font-size'];
    }
    constructor() {
      super(), this.attachShadow({ mode: 'open' });
    }
    connectedCallback() {
      this.updateStyle();
    }
    attributeChangedCallback() {
      this.updateStyle();
    }
    updateStyle() {
      getComputedStyle(this);
      let e = t.options.defaultFontFamily,
        o = '';
      this.hasAttribute('font-family') &&
        (e = this.getAttribute('font-family')),
        this.hasAttribute('font-size') &&
          (o = `font-size: ${this.getAttribute('font-size')};`),
        (this.shadowRoot.innerHTML = `\n      <style>\n        :host {\n          display: inline-block;\n          font-family: ${e};\n          ${o}\n        }\n      </style>`);
    }
  }
  class c extends HTMLElement {
    constructor() {
      super(),
        this.attachShadow({ mode: 'open' }),
        (this.shadowRoot.innerHTML = '<span><slot></slot></span>');
    }
  }
  class l extends HTMLElement {
    constructor() {
      super(),
        this.attachShadow({ mode: 'open' }),
        (this.shadowRoot.innerHTML = '<span><slot></slot></span>');
    }
  }
  class m extends HTMLElement {
    constructor() {
      super(),
        this.attachShadow({ mode: 'open' }),
        (this.shadowRoot.innerHTML =
          '\n    <style>\n      .melisma {\n        position: absolute;\n        display: inline;\n        overflow: hidden!important;\n        white-space: pre;\n      }\n    </style>\n    <span class="melisma"><slot></slot></span>');
    }
  }
  class d extends HTMLElement {
    static get observedAttributes() {
      return ['font-family'];
    }
    constructor(e) {
      super(), (this.glyphname = e), this.attachShadow({ mode: 'open' });
    }
    connectedCallback() {
      this.updateStyle();
    }
    attributeChangedCallback() {
      this.updateStyle();
    }
    updateStyle() {
      let e = '',
        t = '';
      this.hasAttribute('font-family') &&
        (e = `font-family="${this.getAttribute('font-family')}"`),
        this.hasAttribute('salt') &&
          (t = `salt="${this.getAttribute('salt')}"`),
        (this.shadowRoot.innerHTML = `<x-neume name="${this.glyphname}" ${e} ${t}></x-neume>`);
    }
  }
  class p extends d {
    constructor() {
      super('ison');
    }
  }
  class u extends d {
    constructor() {
      super('oligon');
    }
  }
  class E extends d {
    constructor() {
      super('oligonKentimaMiddle');
    }
  }
  class h extends d {
    constructor() {
      super('oligonKentimaBelow');
    }
  }
  class A extends d {
    constructor() {
      super('oligonKentimaAbove');
    }
  }
  class f extends d {
    constructor() {
      super('oligonYpsiliRight');
    }
  }
  class g extends d {
    constructor() {
      super('oligonYpsiliLeft');
    }
  }
  class x extends d {
    constructor() {
      super('oligonKentimaYpsiliRight');
    }
  }
  class O extends d {
    constructor() {
      super('oligonKentimaYpsiliMiddle');
    }
  }
  class I extends d {
    constructor() {
      super('oligonDoubleYpsili');
    }
  }
  class D extends d {
    constructor() {
      super('oligonKentimataDoubleYpsili');
    }
  }
  class T extends d {
    constructor() {
      super('oligonKentimaDoubleYpsiliRight');
    }
  }
  class U extends d {
    constructor() {
      super('oligonKentimaDoubleYpsiliLeft');
    }
  }
  class y extends d {
    constructor() {
      super('oligonTripleYpsili');
    }
  }
  class N extends d {
    constructor() {
      super('oligonKentimataTripleYpsili');
    }
  }
  class b extends d {
    constructor() {
      super('oligonKentimaTripleYpsili');
    }
  }
  class R extends d {
    constructor() {
      super('oligonIson');
    }
  }
  class C extends d {
    constructor() {
      super('oligonApostrofos');
    }
  }
  class L extends d {
    constructor() {
      super('oligonYporroi');
    }
  }
  class S extends d {
    constructor() {
      super('oligonElafron');
    }
  }
  class X extends d {
    constructor() {
      super('oligonElafronApostrofos');
    }
  }
  class B extends d {
    constructor() {
      super('oligonChamili');
    }
  }
  class M extends d {
    constructor() {
      super('isonApostrofos');
    }
  }
  class G extends d {
    constructor() {
      super('apostrofos');
    }
  }
  class w extends d {
    constructor() {
      super('apostrofosSyndesmos');
    }
  }
  class v extends d {
    constructor() {
      super('yporroi');
    }
  }
  class H extends d {
    constructor() {
      super('elafron');
    }
  }
  class K extends d {
    constructor() {
      super('runningElafron');
    }
  }
  class Y extends d {
    constructor() {
      super('elafronApostrofos');
    }
  }
  class P extends d {
    constructor() {
      super('chamili');
    }
  }
  class F extends d {
    constructor() {
      super('chamiliApostrofos');
    }
  }
  class k extends d {
    constructor() {
      super('chamiliElafron');
    }
  }
  class V extends d {
    constructor() {
      super('chamiliElafronApostrofos');
    }
  }
  class W extends d {
    constructor() {
      super('doubleChamili');
    }
  }
  class Z extends d {
    constructor() {
      super('doubleChamiliApostrofos');
    }
  }
  class $ extends d {
    constructor() {
      super('doubleChamiliElafron');
    }
  }
  class z extends d {
    constructor() {
      super('doubleChamiliElafronApostrofos');
    }
  }
  class j extends d {
    constructor() {
      super('tripleChamili');
    }
  }
  class q extends d {
    constructor() {
      super('petastiIson');
    }
  }
  class J extends d {
    constructor() {
      super('petasti');
    }
  }
  class Q extends d {
    constructor() {
      super('petastiOligon');
    }
  }
  class _ extends d {
    constructor() {
      super('petastiKentima');
    }
  }
  class ee extends d {
    constructor() {
      super('petastiYpsiliRight');
    }
  }
  class te extends d {
    constructor() {
      super('petastiYpsiliLeft');
    }
  }
  class oe extends d {
    constructor() {
      super('petastiKentimaYpsiliRight');
    }
  }
  class se extends d {
    constructor() {
      super('petastiKentimaYpsiliMiddle');
    }
  }
  class ie extends d {
    constructor() {
      super('petastiDoubleYpsili');
    }
  }
  class ne extends d {
    constructor() {
      super('petastiKentimataDoubleYpsili');
    }
  }
  class ae extends d {
    constructor() {
      super('petastiKentimaDoubleYpsiliRight');
    }
  }
  class re extends d {
    constructor() {
      super('petastiKentimaDoubleYpsiliLeft');
    }
  }
  class ce extends d {
    constructor() {
      super('petastiTripleYpsili');
    }
  }
  class le extends d {
    constructor() {
      super('petastiKentimataTripleYpsili');
    }
  }
  class me extends d {
    constructor() {
      super('petastiKentimaTripleYpsili');
    }
  }
  class de extends d {
    constructor() {
      super('petastiApostrofos');
    }
  }
  class pe extends d {
    constructor() {
      super('petastiYporroi');
    }
  }
  class ue extends d {
    constructor() {
      super('petastiElafron');
    }
  }
  class Ee extends d {
    constructor() {
      super('petastiRunningElafron');
    }
  }
  class he extends d {
    constructor() {
      super('petastiElafronApostrofos');
    }
  }
  class Ae extends d {
    constructor() {
      super('petastiChamili');
    }
  }
  class fe extends d {
    constructor() {
      super('petastiChamiliApostrofos');
    }
  }
  class ge extends d {
    constructor() {
      super('petastiChamiliElafron');
    }
  }
  class xe extends d {
    constructor() {
      super('petastiChamiliElafronApostrofos');
    }
  }
  class Oe extends d {
    constructor() {
      super('petastiDoubleChamili');
    }
  }
  class Ie extends d {
    constructor() {
      super('petastiDoubleChamiliApostrofos');
    }
  }
  class De extends d {
    constructor() {
      super('kentima');
    }
  }
  class Te extends d {
    constructor() {
      super('kentimata');
    }
  }
  class Ue extends d {
    constructor() {
      super('oligonKentimataBelow');
    }
  }
  class ye extends d {
    constructor() {
      super('oligonKentimataAbove');
    }
  }
  class Ne extends d {
    constructor() {
      super('oligonIsonKentimata');
    }
  }
  class be extends d {
    constructor() {
      super('oligonKentimaMiddleKentimata');
    }
  }
  class Re extends d {
    constructor() {
      super('oligonYpsiliRightKentimata');
    }
  }
  class Ce extends d {
    constructor() {
      super('oligonYpsiliLeftKentimata');
    }
  }
  class Le extends d {
    constructor() {
      super('oligonApostrofosKentimata');
    }
  }
  class Se extends d {
    constructor() {
      super('oligonYporroiKentimata');
    }
  }
  class Xe extends d {
    constructor() {
      super('oligonElafronKentimata');
    }
  }
  class Be extends d {
    constructor() {
      super('oligonRunningElafronKentimata');
    }
  }
  class Me extends d {
    constructor() {
      super('oligonElafronApostrofosKentimata');
    }
  }
  class Ge extends d {
    constructor() {
      super('oligonChamiliKentimata');
    }
  }
  class we extends d {
    constructor() {
      super('vareia');
    }
  }
  class ve extends HTMLElement {
    static get observedAttributes() {
      return ['font-family'];
    }
    constructor(e) {
      super(), (this.glyphname = e), this.attachShadow({ mode: 'open' });
    }
    connectedCallback() {
      this.updateStyle();
    }
    attributeChangedCallback() {
      this.updateStyle();
    }
    updateStyle() {
      let e = '',
        o = '',
        s = '';
      if (
        (this.hasAttribute('font-family') &&
          (o = `font-family="${this.getAttribute('font-family')}"`),
        this.hasAttribute('salt') &&
          (s = `salt="${this.getAttribute('salt')}"`),
        t.options.useLegacyPositioning)
      ) {
        let o = t.options.defaultFontFamily;
        this.hasAttribute('font-family') &&
          (o = this.getAttribute('font-family'));
        const s = t.customElementGlyphMappingService.getGlyphNameFromNodeName(
          this.parentNode?.querySelector('[base]')?.nodeName,
        );
        if (s) {
          const i = t.fontService.getMarkOffset(o, s, this.glyphname);
          e = `style="position: absolute; left: ${i.x}em; top: ${i.y}em;"`;
        }
      }
      this.shadowRoot.innerHTML = `<x-neume name="${this.glyphname}" ${e} ${o} ${s}></x-neume>`;
    }
  }
  class He extends ve {
    constructor() {
      super('psifiston');
    }
  }
  class Ke extends ve {
    constructor() {
      super('antikenoma');
    }
  }
  class Ye extends ve {
    constructor() {
      super('omalon');
    }
  }
  class Pe extends ve {
    constructor() {
      super('omalonConnecting');
    }
  }
  class Fe extends ve {
    constructor() {
      super('heteron');
    }
  }
  class ke extends ve {
    constructor() {
      super('heteronConnecting');
    }
  }
  class Ve extends ve {
    constructor() {
      super('endofonon');
    }
  }
  class We extends ve {
    constructor() {
      super('yfenAbove');
    }
  }
  class Ze extends ve {
    constructor() {
      super('yfenBelow');
    }
  }
  class $e extends d {
    constructor() {
      super('stavros');
    }
  }
  class ze extends d {
    constructor() {
      super('breath');
    }
  }
  class je extends ve {
    constructor() {
      super('klasmaAbove');
    }
  }
  class qe extends ve {
    constructor() {
      super('klasmaBelow');
    }
  }
  class Je extends ve {
    constructor() {
      super('apli');
    }
  }
  class Qe extends ve {
    constructor() {
      super('dipli');
    }
  }
  class _e extends ve {
    constructor() {
      super('tripli');
    }
  }
  class et extends ve {
    constructor() {
      super('tetrapli');
    }
  }
  class tt extends ve {
    constructor() {
      super('koronis');
    }
  }
  class ot extends d {
    constructor() {
      super('leimma1');
    }
  }
  class st extends d {
    constructor() {
      super('leimma2');
    }
  }
  class it extends d {
    constructor() {
      super('leimma3');
    }
  }
  class nt extends d {
    constructor() {
      super('leimma4');
    }
  }
  class at extends ve {
    constructor() {
      super('leimmaDot');
    }
  }
  class rt extends ve {
    constructor() {
      super('gorgonAbove');
    }
  }
  class ct extends ve {
    constructor() {
      super('gorgonBelow');
    }
  }
  class lt extends ve {
    constructor() {
      super('gorgonDottedLeft');
    }
  }
  class mt extends ve {
    constructor() {
      super('gorgonDottedRight');
    }
  }
  class dt extends ve {
    constructor() {
      super('digorgon');
    }
  }
  class pt extends ve {
    constructor() {
      super('digorgonDottedLeftBelow');
    }
  }
  class ut extends ve {
    constructor() {
      super('digorgonDottedLeftAbove');
    }
  }
  class Et extends ve {
    constructor() {
      super('digorgonDottedRight');
    }
  }
  class ht extends ve {
    constructor() {
      super('trigorgon');
    }
  }
  class At extends ve {
    constructor() {
      super('trigorgonDottedLeftBelow');
    }
  }
  class ft extends ve {
    constructor() {
      super('trigorgonDottedLeftAbove');
    }
  }
  class gt extends ve {
    constructor() {
      super('trigorgonDottedRight');
    }
  }
  class xt extends ve {
    constructor() {
      super('argon');
    }
  }
  class Ot extends ve {
    constructor() {
      super('diargon');
    }
  }
  class It extends ve {
    constructor() {
      super('triargon');
    }
  }
  class Dt extends ve {
    constructor() {
      super('gorgonSecondary');
    }
  }
  class Tt extends ve {
    constructor() {
      super('gorgonDottedLeftSecondary');
    }
  }
  class Ut extends ve {
    constructor() {
      super('gorgonDottedRightSecondary');
    }
  }
  class yt extends ve {
    constructor() {
      super('digorgonSecondary');
    }
  }
  class Nt extends ve {
    constructor() {
      super('digorgonDottedLeftBelowSecondary');
    }
  }
  class bt extends ve {
    constructor() {
      super('digorgonDottedRightSecondary');
    }
  }
  class Rt extends ve {
    constructor() {
      super('trigorgonSecondary');
    }
  }
  class Ct extends ve {
    constructor() {
      super('trigorgonDottedLeftBelowSecondary');
    }
  }
  class Lt extends ve {
    constructor() {
      super('trigorgonDottedRightSecondary');
    }
  }
  class St extends d {
    constructor() {
      super('agogiPoliArgi');
    }
  }
  class Xt extends d {
    constructor() {
      super('agogiArgoteri');
    }
  }
  class Bt extends d {
    constructor() {
      super('agogiArgi');
    }
  }
  class Mt extends d {
    constructor() {
      super('agogiMetria');
    }
  }
  class Gt extends d {
    constructor() {
      super('agogiMesi');
    }
  }
  class wt extends d {
    constructor() {
      super('agogiGorgi');
    }
  }
  class vt extends d {
    constructor() {
      super('agogiGorgoteri');
    }
  }
  class Ht extends d {
    constructor() {
      super('agogiPoliGorgi');
    }
  }
  class Kt extends ve {
    constructor() {
      super('agogiPoliArgiAbove');
    }
  }
  class Yt extends ve {
    constructor() {
      super('agogiArgoteriAbove');
    }
  }
  class Pt extends ve {
    constructor() {
      super('agogiArgiAbove');
    }
  }
  class Ft extends ve {
    constructor() {
      super('agogiMetriaAbove');
    }
  }
  class kt extends ve {
    constructor() {
      super('agogiMesiAbove');
    }
  }
  class Vt extends ve {
    constructor() {
      super('agogiGorgiAbove');
    }
  }
  class Wt extends ve {
    constructor() {
      super('agogiGorgoteriAbove');
    }
  }
  class Zt extends ve {
    constructor() {
      super('agogiPoliGorgiAbove');
    }
  }
  class $t extends d {
    constructor() {
      super('martyriaNoteZoLow');
    }
  }
  class zt extends d {
    constructor() {
      super('martyriaNoteNiLow');
    }
  }
  class jt extends d {
    constructor() {
      super('martyriaNotePaLow');
    }
  }
  class qt extends d {
    constructor() {
      super('martyriaNoteVouLow');
    }
  }
  class Jt extends d {
    constructor() {
      super('martyriaNoteGaLow');
    }
  }
  class Qt extends d {
    constructor() {
      super('martyriaNoteDiLow');
    }
  }
  class _t extends d {
    constructor() {
      super('martyriaNoteKeLow');
    }
  }
  class eo extends d {
    constructor() {
      super('martyriaNoteZo');
    }
  }
  class to extends d {
    constructor() {
      super('martyriaNoteNi');
    }
  }
  class oo extends d {
    constructor() {
      super('martyriaNotePa');
    }
  }
  class so extends d {
    constructor() {
      super('martyriaNoteVou');
    }
  }
  class io extends d {
    constructor() {
      super('martyriaNoteGa');
    }
  }
  class no extends d {
    constructor() {
      super('martyriaNoteDi');
    }
  }
  class ao extends d {
    constructor() {
      super('martyriaNoteKe');
    }
  }
  class ro extends d {
    constructor() {
      super('martyriaNoteZoHigh');
    }
  }
  class co extends d {
    constructor() {
      super('martyriaNoteNiHigh');
    }
  }
  class lo extends d {
    constructor() {
      super('martyriaNotePaHigh');
    }
  }
  class mo extends d {
    constructor() {
      super('martyriaNoteVouHigh');
    }
  }
  class po extends d {
    constructor() {
      super('martyriaNoteGaHigh');
    }
  }
  class uo extends d {
    constructor() {
      super('martyriaNoteDiHigh');
    }
  }
  class Eo extends d {
    constructor() {
      super('martyriaNoteKeHigh');
    }
  }
  class ho extends ve {
    constructor() {
      super('martyriaTick');
    }
  }
  class Ao extends ve {
    constructor() {
      super('martyriaZoBelow');
    }
  }
  class fo extends ve {
    constructor() {
      super('martyriaDeltaBelow');
    }
  }
  class go extends ve {
    constructor() {
      super('martyriaAlphaBelow');
    }
  }
  class xo extends ve {
    constructor() {
      super('martyriaLegetosBelow');
    }
  }
  class Oo extends ve {
    constructor() {
      super('martyriaNanaBelow');
    }
  }
  class Io extends ve {
    constructor() {
      super('martyriaDeltaDottedBelow');
    }
  }
  class Do extends ve {
    constructor() {
      super('martyriaAlphaDottedBelow');
    }
  }
  class To extends ve {
    constructor() {
      super('martyriaHardChromaticPaBelow');
    }
  }
  class Uo extends ve {
    constructor() {
      super('martyriaHardChromaticDiBelow');
    }
  }
  class yo extends ve {
    constructor() {
      super('martyriaSoftChromaticDiBelow');
    }
  }
  class No extends ve {
    constructor() {
      super('martyriaSoftChromaticKeBelow');
    }
  }
  class bo extends ve {
    constructor() {
      super('martyriaZygosBelow');
    }
  }
  class Ro extends ve {
    constructor() {
      super('martyriaZoAbove');
    }
  }
  class Co extends ve {
    constructor() {
      super('martyriaDeltaAbove');
    }
  }
  class Lo extends ve {
    constructor() {
      super('martyriaAlphaAbove');
    }
  }
  class So extends ve {
    constructor() {
      super('martyriaLegetosAbove');
    }
  }
  class Xo extends ve {
    constructor() {
      super('martyriaNanaAbove');
    }
  }
  class Bo extends ve {
    constructor() {
      super('martyriaDeltaDottedAbove');
    }
  }
  class Mo extends ve {
    constructor() {
      super('martyriaAlphaDottedAbove');
    }
  }
  class Go extends ve {
    constructor() {
      super('martyriaHardChromaticPaAbove');
    }
  }
  class wo extends ve {
    constructor() {
      super('martyriaHardChromaticDiAbove');
    }
  }
  class vo extends ve {
    constructor() {
      super('martyriaSoftChromaticDiAbove');
    }
  }
  class Ho extends ve {
    constructor() {
      super('martyriaSoftChromaticKeAbove');
    }
  }
  class Ko extends ve {
    constructor() {
      super('martyriaZygosAbove');
    }
  }
  class Yo extends ve {
    constructor() {
      super('fthoraDiatonicNiLowAbove');
    }
  }
  class Po extends ve {
    constructor() {
      super('fthoraDiatonicPaAbove');
    }
  }
  class Fo extends ve {
    constructor() {
      super('fthoraDiatonicVouAbove');
    }
  }
  class ko extends ve {
    constructor() {
      super('fthoraDiatonicGaAbove');
    }
  }
  class Vo extends ve {
    constructor() {
      super('fthoraDiatonicDiAbove');
    }
  }
  class Wo extends ve {
    constructor() {
      super('fthoraDiatonicKeAbove');
    }
  }
  class Zo extends ve {
    constructor() {
      super('fthoraDiatonicZoAbove');
    }
  }
  class $o extends ve {
    constructor() {
      super('fthoraDiatonicNiHighAbove');
    }
  }
  class zo extends ve {
    constructor() {
      super('fthoraHardChromaticPaAbove');
    }
  }
  class jo extends ve {
    constructor() {
      super('fthoraHardChromaticDiAbove');
    }
  }
  class qo extends ve {
    constructor() {
      super('fthoraSoftChromaticDiAbove');
    }
  }
  class Jo extends ve {
    constructor() {
      super('fthoraSoftChromaticKeAbove');
    }
  }
  class Qo extends ve {
    constructor() {
      super('fthoraEnharmonicAbove');
    }
  }
  class _o extends ve {
    constructor() {
      super('chroaZygosAbove');
    }
  }
  class es extends ve {
    constructor() {
      super('chroaKlitonAbove');
    }
  }
  class ts extends ve {
    constructor() {
      super('chroaSpathiAbove');
    }
  }
  class os extends ve {
    constructor() {
      super('fthoraDiatonicNiLowBelow');
    }
  }
  class ss extends ve {
    constructor() {
      super('fthoraDiatonicPaBelow');
    }
  }
  class is extends ve {
    constructor() {
      super('fthoraDiatonicVouBelow');
    }
  }
  class ns extends ve {
    constructor() {
      super('fthoraDiatonicGaBelow');
    }
  }
  class as extends ve {
    constructor() {
      super('fthoraDiatonicDiBelow');
    }
  }
  class rs extends ve {
    constructor() {
      super('fthoraDiatonicKeBelow');
    }
  }
  class cs extends ve {
    constructor() {
      super('fthoraDiatonicZoBelow');
    }
  }
  class ls extends ve {
    constructor() {
      super('fthoraDiatonicNiHighBelow');
    }
  }
  class ms extends ve {
    constructor() {
      super('fthoraHardChromaticPaBelow');
    }
  }
  class ds extends ve {
    constructor() {
      super('fthoraHardChromaticDiBelow');
    }
  }
  class ps extends ve {
    constructor() {
      super('fthoraSoftChromaticDiBelow');
    }
  }
  class us extends ve {
    constructor() {
      super('fthoraSoftChromaticKeBelow');
    }
  }
  class Es extends ve {
    constructor() {
      super('fthoraEnharmonicBelow');
    }
  }
  class hs extends ve {
    constructor() {
      super('chroaZygosBelow');
    }
  }
  class As extends ve {
    constructor() {
      super('chroaKlitonBelow');
    }
  }
  class fs extends ve {
    constructor() {
      super('chroaSpathiBelow');
    }
  }
  class gs extends ve {
    constructor() {
      super('diesis2');
    }
  }
  class xs extends ve {
    constructor() {
      super('diesis4');
    }
  }
  class Os extends ve {
    constructor() {
      super('diesis6');
    }
  }
  class Is extends ve {
    constructor() {
      super('diesis8');
    }
  }
  class Ds extends ve {
    constructor() {
      super('diesisGenikiAbove');
    }
  }
  class Ts extends ve {
    constructor() {
      super('diesisGenikiBelow');
    }
  }
  class Us extends ve {
    constructor() {
      super('yfesis2');
    }
  }
  class ys extends ve {
    constructor() {
      super('yfesis4');
    }
  }
  class Ns extends ve {
    constructor() {
      super('yfesis6');
    }
  }
  class bs extends ve {
    constructor() {
      super('yfesis8');
    }
  }
  class Rs extends ve {
    constructor() {
      super('yfesisGenikiAbove');
    }
  }
  class Cs extends ve {
    constructor() {
      super('yfesisGenikiBelow');
    }
  }
  class Ls extends d {
    constructor() {
      super('barlineSingle');
    }
  }
  class Ss extends d {
    constructor() {
      super('barlineDouble');
    }
  }
  class Xs extends d {
    constructor() {
      super('barlineTheseos');
    }
  }
  class Bs extends d {
    constructor() {
      super('barlineShortSingle');
    }
  }
  class Ms extends d {
    constructor() {
      super('barlineShortDouble');
    }
  }
  class Gs extends d {
    constructor() {
      super('barlineShortTheseos');
    }
  }
  class ws extends ve {
    constructor() {
      super('measureNumber2');
    }
  }
  class vs extends ve {
    constructor() {
      super('measureNumber3');
    }
  }
  class Hs extends ve {
    constructor() {
      super('measureNumber4');
    }
  }
  class Ks extends ve {
    constructor() {
      super('measureNumber5');
    }
  }
  class Ys extends ve {
    constructor() {
      super('measureNumber6');
    }
  }
  class Ps extends ve {
    constructor() {
      super('measureNumber7');
    }
  }
  class Fs extends ve {
    constructor() {
      super('measureNumber8');
    }
  }
  class ks extends ve {
    constructor() {
      super('noteIndicatorNi');
    }
  }
  class Vs extends ve {
    constructor() {
      super('noteIndicatorPa');
    }
  }
  class Ws extends ve {
    constructor() {
      super('noteIndicatorVou');
    }
  }
  class Zs extends ve {
    constructor() {
      super('noteIndicatorGa');
    }
  }
  class $s extends ve {
    constructor() {
      super('noteIndicatorDi');
    }
  }
  class zs extends ve {
    constructor() {
      super('noteIndicatorKe');
    }
  }
  class js extends ve {
    constructor() {
      super('noteIndicatorZo');
    }
  }
  class qs extends ve {
    constructor() {
      super('isonIndicatorUnison');
    }
  }
  class Js extends ve {
    constructor() {
      super('isonIndicatorDiLow');
    }
  }
  class Qs extends ve {
    constructor() {
      super('isonIndicatorKeLow');
    }
  }
  class _s extends ve {
    constructor() {
      super('isonIndicatorZo');
    }
  }
  class ei extends ve {
    constructor() {
      super('isonIndicatorNi');
    }
  }
  class ti extends ve {
    constructor() {
      super('isonIndicatorPa');
    }
  }
  class oi extends ve {
    constructor() {
      super('isonIndicatorVou');
    }
  }
  class si extends ve {
    constructor() {
      super('isonIndicatorGa');
    }
  }
  class ii extends ve {
    constructor() {
      super('isonIndicatorDi');
    }
  }
  class ni extends ve {
    constructor() {
      super('isonIndicatorKe');
    }
  }
  class ai extends ve {
    constructor() {
      super('isonIndicatorZoHigh');
    }
  }
  class ri extends ve {
    constructor() {
      super('gorthmikon');
    }
  }
  class ci extends ve {
    constructor() {
      super('pelastikon');
    }
  }
  class li extends ve {
    constructor() {
      super('modeFirst');
    }
  }
  class mi extends ve {
    constructor() {
      super('modeSecond');
    }
  }
  class di extends ve {
    constructor() {
      super('modeThird');
    }
  }
  class pi extends ve {
    constructor() {
      super('modeThirdNana');
    }
  }
  class ui extends ve {
    constructor() {
      super('modeFourth');
    }
  }
  class Ei extends ve {
    constructor() {
      super('modeLegetos');
    }
  }
  class hi extends ve {
    constructor() {
      super('modePlagalFirst');
    }
  }
  class Ai extends ve {
    constructor() {
      super('modePlagalSecond');
    }
  }
  class fi extends ve {
    constructor() {
      super('modeVarys');
    }
  }
  class gi extends ve {
    constructor() {
      super('modeVarys2');
    }
  }
  class xi extends ve {
    constructor() {
      super('modePlagalFourth');
    }
  }
  class Oi extends ve {
    constructor() {
      super('modeNi');
    }
  }
  class Ii extends ve {
    constructor() {
      super('modePa');
    }
  }
  class Di extends ve {
    constructor() {
      super('modeVou');
    }
  }
  class Ti extends ve {
    constructor() {
      super('modeGa');
    }
  }
  class Ui extends ve {
    constructor() {
      super('modeDi');
    }
  }
  class yi extends ve {
    constructor() {
      super('modeKe');
    }
  }
  class Ni extends ve {
    constructor() {
      super('modeZo');
    }
  }
  class bi extends ve {
    constructor() {
      super('modeOligonKentimaAbove');
    }
  }
  class Ri extends ve {
    constructor() {
      super('modeOligonYpsili');
    }
  }
  class Ci extends ve {
    constructor() {
      super('modeElafron');
    }
  }
  class Li extends ve {
    constructor() {
      super('modeRunningElafron');
    }
  }
  class Si extends ve {
    constructor() {
      super('modePlagal');
    }
  }
  class Xi extends ve {
    constructor() {
      super('modeWordEchos');
    }
  }
  class Bi extends ve {
    constructor() {
      super('modeWordVarys');
    }
  }
  class Mi extends ve {
    constructor() {
      super('modeAlpha');
    }
  }
  class Gi extends ve {
    constructor() {
      super('modeBeta');
    }
  }
  class wi extends ve {
    constructor() {
      super('modeGamma');
    }
  }
  class vi extends ve {
    constructor() {
      super('modeDelta');
    }
  }
  class Hi extends ve {
    constructor() {
      super('modeAlphaCapital');
    }
  }
  class Ki extends ve {
    constructor() {
      super('modeBetaCapital');
    }
  }
  class Yi extends ve {
    constructor() {
      super('modeGammaCapital');
    }
  }
  class Pi extends ve {
    constructor() {
      super('modeDeltaCapital');
    }
  }
  return (
    customElements.define('x-drop-cap', c),
    customElements.define('x-lyric', l),
    customElements.define('x-martyria', o),
    customElements.define('x-melisma', m),
    customElements.define('x-neume', s),
    customElements.define('x-note', i),
    customElements.define('x-spacer', n),
    customElements.define('x-spacer-apostrofos', a),
    customElements.define('x-spacer-vareia', r),
    customElements.define('x-ison', p),
    customElements.define('x-oligon', u),
    customElements.define('x-oligon-kentima-middle', E),
    customElements.define('x-oligon-kentima-below', h),
    customElements.define('x-oligon-kentima-above', A),
    customElements.define('x-oligon-ypsili-right', f),
    customElements.define('x-oligon-ypsili-left', g),
    customElements.define('x-oligon-kentima-ypsili-right', x),
    customElements.define('x-oligon-kentima-ypsili-middle', O),
    customElements.define('x-oligon-double-ypsili', I),
    customElements.define('x-oligon-kentimata-double-ypsili', D),
    customElements.define('x-oligon-kentima-double-ypsili-right', T),
    customElements.define('x-oligon-kentima-double-ypsili-left', U),
    customElements.define('x-oligon-triple-ypsili', y),
    customElements.define('x-oligon-kentimata-triple-ypsili', N),
    customElements.define('x-oligon-kentima-triple-ypsili', b),
    customElements.define('x-oligon-ison', R),
    customElements.define('x-oligon-apostrofos', C),
    customElements.define('x-oligon-yporroi', L),
    customElements.define('x-oligon-elafron', S),
    customElements.define('x-oligon-elafron-apostrofos', X),
    customElements.define('x-oligon-chamili', B),
    customElements.define('x-ison-apostrofos', M),
    customElements.define('x-apostrofos', G),
    customElements.define('x-apostrofos-syndesmos', w),
    customElements.define('x-yporroi', v),
    customElements.define('x-elafron', H),
    customElements.define('x-running-elafron', K),
    customElements.define('x-elafron-apostrofos', Y),
    customElements.define('x-chamili', P),
    customElements.define('x-chamili-apostrofos', F),
    customElements.define('x-chamili-elafron', k),
    customElements.define('x-chamili-elafron-apostrofos', V),
    customElements.define('x-double-chamili', W),
    customElements.define('x-double-chamili-apostrofos', Z),
    customElements.define('x-double-chamili-elafron', $),
    customElements.define('x-double-chamili-elafron-apostrofos', z),
    customElements.define('x-triple-chamili', j),
    customElements.define('x-petasti-ison', q),
    customElements.define('x-petasti', J),
    customElements.define('x-petasti-oligon', Q),
    customElements.define('x-petasti-kentima', _),
    customElements.define('x-petasti-ypsili-right', ee),
    customElements.define('x-petasti-ypsili-left', te),
    customElements.define('x-petasti-kentima-ypsili-right', oe),
    customElements.define('x-petasti-kentima-ypsili-middle', se),
    customElements.define('x-petasti-double-ypsili', ie),
    customElements.define('x-petasti-kentimata-double-ypsili', ne),
    customElements.define('x-petasti-kentima-double-ypsili-right', ae),
    customElements.define('x-petasti-kentima-double-ypsili-left', re),
    customElements.define('x-petasti-triple-ypsili', ce),
    customElements.define('x-petasti-kentimata-triple-ypsili', le),
    customElements.define('x-petasti-kentima-triple-ypsili', me),
    customElements.define('x-petasti-apostrofos', de),
    customElements.define('x-petasti-yporroi', pe),
    customElements.define('x-petasti-elafron', ue),
    customElements.define('x-petasti-running-elafron', Ee),
    customElements.define('x-petasti-elafron-apostrofos', he),
    customElements.define('x-petasti-chamili', Ae),
    customElements.define('x-petasti-chamili-apostrofos', fe),
    customElements.define('x-petasti-chamili-elafron', ge),
    customElements.define('x-petasti-chamili-elafron-apostrofos', xe),
    customElements.define('x-petasti-double-chamili', Oe),
    customElements.define('x-petasti-double-chamili-apostrofos', Ie),
    customElements.define('x-kentima', De),
    customElements.define('x-kentimata', Te),
    customElements.define('x-oligon-kentimata-below', Ue),
    customElements.define('x-oligon-kentimata-above', ye),
    customElements.define('x-oligon-ison-kentimata', Ne),
    customElements.define('x-oligon-kentima-middle-kentimata', be),
    customElements.define('x-oligon-ypsili-right-kentimata', Re),
    customElements.define('x-oligon-ypsili-left-kentimata', Ce),
    customElements.define('x-oligon-apostrofos-kentimata', Le),
    customElements.define('x-oligon-yporroi-kentimata', Se),
    customElements.define('x-oligon-elafron-kentimata', Xe),
    customElements.define('x-oligon-running-elafron-kentimata', Be),
    customElements.define('x-oligon-elafron-apostrofos-kentimata', Me),
    customElements.define('x-oligon-chamili-kentimata', Ge),
    customElements.define('x-vareia', we),
    customElements.define('x-psifiston', He),
    customElements.define('x-antikenoma', Ke),
    customElements.define('x-omalon', Ye),
    customElements.define('x-omalon-connecting', Pe),
    customElements.define('x-heteron', Fe),
    customElements.define('x-heteron-connecting', ke),
    customElements.define('x-endofonon', Ve),
    customElements.define('x-yfen-above', We),
    customElements.define('x-yfen-below', Ze),
    customElements.define('x-stavros', $e),
    customElements.define('x-breath', ze),
    customElements.define('x-klasma-above', je),
    customElements.define('x-klasma-below', qe),
    customElements.define('x-apli', Je),
    customElements.define('x-dipli', Qe),
    customElements.define('x-tripli', _e),
    customElements.define('x-tetrapli', et),
    customElements.define('x-koronis', tt),
    customElements.define('x-leimma1', ot),
    customElements.define('x-leimma2', st),
    customElements.define('x-leimma3', it),
    customElements.define('x-leimma4', nt),
    customElements.define('x-leimma-dot', at),
    customElements.define('x-gorgon-above', rt),
    customElements.define('x-gorgon-below', ct),
    customElements.define('x-gorgon-dotted-left', lt),
    customElements.define('x-gorgon-dotted-right', mt),
    customElements.define('x-digorgon', dt),
    customElements.define('x-digorgon-dotted-left-below', pt),
    customElements.define('x-digorgon-dotted-left-above', ut),
    customElements.define('x-digorgon-dotted-right', Et),
    customElements.define('x-trigorgon', ht),
    customElements.define('x-trigorgon-dotted-left-below', At),
    customElements.define('x-trigorgon-dotted-left-above', ft),
    customElements.define('x-trigorgon-dotted-right', gt),
    customElements.define('x-argon', xt),
    customElements.define('x-diargon', Ot),
    customElements.define('x-triargon', It),
    customElements.define('x-gorgon-secondary', Dt),
    customElements.define('x-gorgon-dotted-left-secondary', Tt),
    customElements.define('x-gorgon-dotted-right-secondary', Ut),
    customElements.define('x-digorgon-secondary', yt),
    customElements.define('x-digorgon-dotted-left-below-secondary', Nt),
    customElements.define('x-digorgon-dotted-right-secondary', bt),
    customElements.define('x-trigorgon-secondary', Rt),
    customElements.define('x-trigorgon-dotted-left-below-secondary', Ct),
    customElements.define('x-trigorgon-dotted-right-secondary', Lt),
    customElements.define('x-agogi-poli-argi', St),
    customElements.define('x-agogi-argoteri', Xt),
    customElements.define('x-agogi-argi', Bt),
    customElements.define('x-agogi-metria', Mt),
    customElements.define('x-agogi-mesi', Gt),
    customElements.define('x-agogi-gorgi', wt),
    customElements.define('x-agogi-gorgoteri', vt),
    customElements.define('x-agogi-poli-gorgi', Ht),
    customElements.define('x-agogi-poli-argi-above', Kt),
    customElements.define('x-agogi-argoteri-above', Yt),
    customElements.define('x-agogi-argi-above', Pt),
    customElements.define('x-agogi-metria-above', Ft),
    customElements.define('x-agogi-mesi-above', kt),
    customElements.define('x-agogi-gorgi-above', Vt),
    customElements.define('x-agogi-gorgoteri-above', Wt),
    customElements.define('x-agogi-poli-gorgi-above', Zt),
    customElements.define('x-martyria-note-zo-low', $t),
    customElements.define('x-martyria-note-ni-low', zt),
    customElements.define('x-martyria-note-pa-low', jt),
    customElements.define('x-martyria-note-vou-low', qt),
    customElements.define('x-martyria-note-ga-low', Jt),
    customElements.define('x-martyria-note-di-low', Qt),
    customElements.define('x-martyria-note-ke-low', _t),
    customElements.define('x-martyria-note-zo', eo),
    customElements.define('x-martyria-note-ni', to),
    customElements.define('x-martyria-note-pa', oo),
    customElements.define('x-martyria-note-vou', so),
    customElements.define('x-martyria-note-ga', io),
    customElements.define('x-martyria-note-di', no),
    customElements.define('x-martyria-note-ke', ao),
    customElements.define('x-martyria-note-zo-high', ro),
    customElements.define('x-martyria-note-ni-high', co),
    customElements.define('x-martyria-note-pa-high', lo),
    customElements.define('x-martyria-note-vou-high', mo),
    customElements.define('x-martyria-note-ga-high', po),
    customElements.define('x-martyria-note-di-high', uo),
    customElements.define('x-martyria-note-ke-high', Eo),
    customElements.define('x-martyria-tick', ho),
    customElements.define('x-martyria-zo-below', Ao),
    customElements.define('x-martyria-delta-below', fo),
    customElements.define('x-martyria-alpha-below', go),
    customElements.define('x-martyria-legetos-below', xo),
    customElements.define('x-martyria-nana-below', Oo),
    customElements.define('x-martyria-delta-dotted-below', Io),
    customElements.define('x-martyria-alpha-dotted-below', Do),
    customElements.define('x-martyria-hard-chromatic-pa-below', To),
    customElements.define('x-martyria-hard-chromatic-di-below', Uo),
    customElements.define('x-martyria-soft-chromatic-di-below', yo),
    customElements.define('x-martyria-soft-chromatic-ke-below', No),
    customElements.define('x-martyria-zygos-below', bo),
    customElements.define('x-martyria-zo-above', Ro),
    customElements.define('x-martyria-delta-above', Co),
    customElements.define('x-martyria-alpha-above', Lo),
    customElements.define('x-martyria-legetos-above', So),
    customElements.define('x-martyria-nana-above', Xo),
    customElements.define('x-martyria-delta-dotted-above', Bo),
    customElements.define('x-martyria-alpha-dotted-above', Mo),
    customElements.define('x-martyria-hard-chromatic-pa-above', Go),
    customElements.define('x-martyria-hard-chromatic-di-above', wo),
    customElements.define('x-martyria-soft-chromatic-di-above', vo),
    customElements.define('x-martyria-soft-chromatic-ke-above', Ho),
    customElements.define('x-martyria-zygos-above', Ko),
    customElements.define('x-fthora-diatonic-ni-low-above', Yo),
    customElements.define('x-fthora-diatonic-pa-above', Po),
    customElements.define('x-fthora-diatonic-vou-above', Fo),
    customElements.define('x-fthora-diatonic-ga-above', ko),
    customElements.define('x-fthora-diatonic-di-above', Vo),
    customElements.define('x-fthora-diatonic-ke-above', Wo),
    customElements.define('x-fthora-diatonic-zo-above', Zo),
    customElements.define('x-fthora-diatonic-ni-high-above', $o),
    customElements.define('x-fthora-hard-chromatic-pa-above', zo),
    customElements.define('x-fthora-hard-chromatic-di-above', jo),
    customElements.define('x-fthora-soft-chromatic-di-above', qo),
    customElements.define('x-fthora-soft-chromatic-ke-above', Jo),
    customElements.define('x-fthora-enharmonic-above', Qo),
    customElements.define('x-chroa-zygos-above', _o),
    customElements.define('x-chroa-kliton-above', es),
    customElements.define('x-chroa-spathi-above', ts),
    customElements.define('x-fthora-diatonic-ni-low-below', os),
    customElements.define('x-fthora-diatonic-pa-below', ss),
    customElements.define('x-fthora-diatonic-vou-below', is),
    customElements.define('x-fthora-diatonic-ga-below', ns),
    customElements.define('x-fthora-diatonic-di-below', as),
    customElements.define('x-fthora-diatonic-ke-below', rs),
    customElements.define('x-fthora-diatonic-zo-below', cs),
    customElements.define('x-fthora-diatonic-ni-high-below', ls),
    customElements.define('x-fthora-hard-chromatic-pa-below', ms),
    customElements.define('x-fthora-hard-chromatic-di-below', ds),
    customElements.define('x-fthora-soft-chromatic-di-below', ps),
    customElements.define('x-fthora-soft-chromatic-ke-below', us),
    customElements.define('x-fthora-enharmonic-below', Es),
    customElements.define('x-chroa-zygos-below', hs),
    customElements.define('x-chroa-kliton-below', As),
    customElements.define('x-chroa-spathi-below', fs),
    customElements.define('x-diesis2', gs),
    customElements.define('x-diesis4', xs),
    customElements.define('x-diesis6', Os),
    customElements.define('x-diesis8', Is),
    customElements.define('x-diesis-geniki-above', Ds),
    customElements.define('x-diesis-geniki-below', Ts),
    customElements.define('x-yfesis2', Us),
    customElements.define('x-yfesis4', ys),
    customElements.define('x-yfesis6', Ns),
    customElements.define('x-yfesis8', bs),
    customElements.define('x-yfesis-geniki-above', Rs),
    customElements.define('x-yfesis-geniki-below', Cs),
    customElements.define('x-barline-single', Ls),
    customElements.define('x-barline-double', Ss),
    customElements.define('x-barline-theseos', Xs),
    customElements.define('x-barline-short-single', Bs),
    customElements.define('x-barline-short-double', Ms),
    customElements.define('x-barline-short-theseos', Gs),
    customElements.define('x-measure-number2', ws),
    customElements.define('x-measure-number3', vs),
    customElements.define('x-measure-number4', Hs),
    customElements.define('x-measure-number5', Ks),
    customElements.define('x-measure-number6', Ys),
    customElements.define('x-measure-number7', Ps),
    customElements.define('x-measure-number8', Fs),
    customElements.define('x-note-indicator-ni', ks),
    customElements.define('x-note-indicator-pa', Vs),
    customElements.define('x-note-indicator-vou', Ws),
    customElements.define('x-note-indicator-ga', Zs),
    customElements.define('x-note-indicator-di', $s),
    customElements.define('x-note-indicator-ke', zs),
    customElements.define('x-note-indicator-zo', js),
    customElements.define('x-ison-indicator-unison', qs),
    customElements.define('x-ison-indicator-di-low', Js),
    customElements.define('x-ison-indicator-ke-low', Qs),
    customElements.define('x-ison-indicator-zo', _s),
    customElements.define('x-ison-indicator-ni', ei),
    customElements.define('x-ison-indicator-pa', ti),
    customElements.define('x-ison-indicator-vou', oi),
    customElements.define('x-ison-indicator-ga', si),
    customElements.define('x-ison-indicator-di', ii),
    customElements.define('x-ison-indicator-ke', ni),
    customElements.define('x-ison-indicator-zo-high', ai),
    customElements.define('x-gorthmikon', ri),
    customElements.define('x-pelastikon', ci),
    customElements.define('x-mode-first', li),
    customElements.define('x-mode-second', mi),
    customElements.define('x-mode-third', di),
    customElements.define('x-mode-third-nana', pi),
    customElements.define('x-mode-fourth', ui),
    customElements.define('x-mode-legetos', Ei),
    customElements.define('x-mode-plagal-first', hi),
    customElements.define('x-mode-plagal-second', Ai),
    customElements.define('x-mode-varys', fi),
    customElements.define('x-mode-varys2', gi),
    customElements.define('x-mode-plagal-fourth', xi),
    customElements.define('x-mode-ni', Oi),
    customElements.define('x-mode-pa', Ii),
    customElements.define('x-mode-vou', Di),
    customElements.define('x-mode-ga', Ti),
    customElements.define('x-mode-di', Ui),
    customElements.define('x-mode-ke', yi),
    customElements.define('x-mode-zo', Ni),
    customElements.define('x-mode-oligon-kentima-above', bi),
    customElements.define('x-mode-oligon-ypsili', Ri),
    customElements.define('x-mode-elafron', Ci),
    customElements.define('x-mode-running-elafron', Li),
    customElements.define('x-mode-plagal', Si),
    customElements.define('x-mode-word-echos', Xi),
    customElements.define('x-mode-word-varys', Bi),
    customElements.define('x-mode-alpha', Mi),
    customElements.define('x-mode-beta', Gi),
    customElements.define('x-mode-gamma', wi),
    customElements.define('x-mode-delta', vi),
    customElements.define('x-mode-alpha-capital', Hi),
    customElements.define('x-mode-beta-capital', Ki),
    customElements.define('x-mode-gamma-capital', Yi),
    customElements.define('x-mode-delta-capital', Pi),
    t
  );
})();
//# sourceMappingURL=byzhtml.min.js.map
